{
  "contractName": "ECOToken",
  "abi": [
    {
      "name": "Approval",
      "inputs": [
        {
          "type": "address",
          "name": "owner",
          "indexed": true
        },
        {
          "type": "address",
          "name": "spender",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false,
          "unit": "wei"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Burned",
      "inputs": [
        {
          "type": "address",
          "name": "burner",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false,
          "unit": "wei"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Minted",
      "inputs": [
        {
          "type": "address",
          "name": "to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false,
          "unit": "wei"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Transfer",
      "inputs": [
        {
          "type": "address",
          "name": "source",
          "indexed": true
        },
        {
          "type": "address",
          "name": "to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false,
          "unit": "wei"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "initial_balance"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "allowance",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "owner"
        },
        {
          "type": "address",
          "name": "spender"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 859
    },
    {
      "name": "approve",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "spender"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 37763
    },
    {
      "name": "balanceOf",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "owner"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 765
    },
    {
      "name": "getPrivileged",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        },
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 919
    },
    {
      "name": "hasPrivilege",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "sender"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 934
    },
    {
      "name": "burn",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 73369
    },
    {
      "name": "burnAll",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "owner"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 78620
    },
    {
      "name": "decreaseAllowance",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "spender"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 38748
    },
    {
      "name": "increaseAllowance",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "spender"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 38784
    },
    {
      "name": "mint",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 73712
    },
    {
      "name": "setPrivileged",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "reserve"
        },
        {
          "type": "address",
          "name": "listing"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 71577
    },
    {
      "name": "totalSupply",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 881
    },
    {
      "name": "transfer",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "to"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 73969
    },
    {
      "name": "transferFrom",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "source"
        },
        {
          "type": "address",
          "name": "to"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 109760
    },
    {
      "name": "decimals",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "symbol",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5226
    },
    {
      "name": "name",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5256
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526020610c406101403934156100a157600080fd5b3360055561014051600160055460e05260c052604060c0205560126002556003610160527f45434f00000000000000000000000000000000000000000000000000000000006101805261016080600360c052602060c020602082510161012060006002818352015b8261012051602002111561011c5761013e565b61012051602002850151610120518501555b8151600101808352811415610109575b50505050505060076101c0527f456d6572616c64000000000000000000000000000000000000000000000000006101e0526101c080600460c052602060c020602082510161012060006002818352015b826101205160200211156101a1576101c3565b61012051602002850151610120518501555b815160010180835281141561018e575b50505050505061014051600855610140516102205260055460007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610220a3610c2856600436101561000d57610a19565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263dd62ed3e60005114156101085734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b50600060043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63095ea7b3600051141561019257341561012157600080fd5b600435602051811061013257600080fd5b5060243560003360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6370a0823160005114156101d95734156101ab57600080fd5b60043560205181106101bc57600080fd5b50600160043560e05260c052604060c0205460005260206000f350005b63d4c1753960005114156102145734156101f257600080fd5b604061014052610160600654815260075481602001525061014051610160f350005b63b7bf210c600051141561025957341561022d57600080fd5b600435602051811061023e57600080fd5b5060075460043514600654600435141760005260206000f350005b6342966c6860005114156102f957341561027257600080fd5b600754331461028057600080fd5b60013360e05260c052604060c0208054600435808210156102a057600080fd5b8082039050905081555060088054600435808210156102be57600080fd5b8082039050905081555060043561014052337f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df76020610140a2005b637e9d2ac160005114156103cc57341561031257600080fd5b600435602051811061032357600080fd5b50600654331461033257600080fd5b600160043560e05260c052604060c020546101405260088054610140518082101561035c57600080fd5b808203905090508155506000600160043560e05260c052604060c020556000600060043560e05260c052604060c0203360e05260c052604060c0205561014051610160526004357f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df76020610160a2005b63a457c2d760005114156104885734156103e557600080fd5b60043560205181106103f657600080fd5b5060003360e05260c052604060c02060043560e05260c052604060c02080546024358082101561042557600080fd5b8082039050905081555060003360e05260c052604060c02060043560e05260c052604060c0205461014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b633950935160005114156105465734156104a157600080fd5b60043560205181106104b257600080fd5b5060003360e05260c052604060c02060043560e05260c052604060c02080546024358181830110156104e357600080fd5b8082019050905081555060003360e05260c052604060c02060043560e05260c052604060c0205461014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b63a0712d6860005114156105f057341561055f57600080fd5b600754331460065433141761057357600080fd5b6008805460043581818301101561058957600080fd5b8082019050905081555060013360e05260c052604060c02080546004358181830110156105b557600080fd5b8082019050905081555060043561014052337f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe6020610140a2005b63b01e369f600051141561066357341561060957600080fd5b600435602051811061061a57600080fd5b50602435602051811061062c57600080fd5b50600554331461063b57600080fd5b6006541561064857600080fd5b6007541561065557600080fd5b600435600655602435600755005b6318160ddd600051141561068a57341561067c57600080fd5b60085460005260206000f350005b63a9059cbb600051141561075b5734156106a357600080fd5b60043560205181106106b457600080fd5b506000600435186106c457600080fd5b60013360e05260c052604060c0208054602435808210156106e457600080fd5b80820390509050815550600160043560e05260c052604060c020805460243581818301101561071257600080fd5b8082019050905081555060243561014052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b6323b872dd600051141561088957341561077457600080fd5b600435602051811061078557600080fd5b50602435602051811061079757600080fd5b506000600435186107a757600080fd5b6000602435186107b657600080fd5b600160043560e05260c052604060c0208054604435808210156107d857600080fd5b80820390509050815550600160243560e05260c052604060c020805460443581818301101561080657600080fd5b80820190509050815550600060043560e05260c052604060c0203360e05260c052604060c02080546044358082101561083e57600080fd5b80820390509050815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b63313ce56760005114156108b05734156108a257600080fd5b60025460005260206000f350005b6395d89b4160005114156109645734156108c957600080fd5b60038060c052602060c020610180602082540161012060006002818352015b826101205160200211156108fb5761091d565b61012051850154610120516020028501525b81516001018083528114156108e8575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6306fdde036000511415610a1857341561097d57600080fd5b60048060c052602060c020610180602082540161012060006002818352015b826101205160200211156109af576109d1565b61012051850154610120516020028501525b815160010180835281141561099c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b5b60006000fd5b610209610c2803610209600039610209610c28036000f3",
  "deployedBytecode": "0x600436101561000d57610a19565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263dd62ed3e60005114156101085734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060243560205181106100dd57600080fd5b50600060043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b63095ea7b3600051141561019257341561012157600080fd5b600435602051811061013257600080fd5b5060243560003360e05260c052604060c02060043560e05260c052604060c0205560243561014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b6370a0823160005114156101d95734156101ab57600080fd5b60043560205181106101bc57600080fd5b50600160043560e05260c052604060c0205460005260206000f350005b63d4c1753960005114156102145734156101f257600080fd5b604061014052610160600654815260075481602001525061014051610160f350005b63b7bf210c600051141561025957341561022d57600080fd5b600435602051811061023e57600080fd5b5060075460043514600654600435141760005260206000f350005b6342966c6860005114156102f957341561027257600080fd5b600754331461028057600080fd5b60013360e05260c052604060c0208054600435808210156102a057600080fd5b8082039050905081555060088054600435808210156102be57600080fd5b8082039050905081555060043561014052337f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df76020610140a2005b637e9d2ac160005114156103cc57341561031257600080fd5b600435602051811061032357600080fd5b50600654331461033257600080fd5b600160043560e05260c052604060c020546101405260088054610140518082101561035c57600080fd5b808203905090508155506000600160043560e05260c052604060c020556000600060043560e05260c052604060c0203360e05260c052604060c0205561014051610160526004357f696de425f79f4a40bc6d2122ca50507f0efbeabbff86a84871b7196ab8ea8df76020610160a2005b63a457c2d760005114156104885734156103e557600080fd5b60043560205181106103f657600080fd5b5060003360e05260c052604060c02060043560e05260c052604060c02080546024358082101561042557600080fd5b8082039050905081555060003360e05260c052604060c02060043560e05260c052604060c0205461014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b633950935160005114156105465734156104a157600080fd5b60043560205181106104b257600080fd5b5060003360e05260c052604060c02060043560e05260c052604060c02080546024358181830110156104e357600080fd5b8082019050905081555060003360e05260c052604060c02060043560e05260c052604060c0205461014052600435337f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9256020610140a3600160005260206000f350005b63a0712d6860005114156105f057341561055f57600080fd5b600754331460065433141761057357600080fd5b6008805460043581818301101561058957600080fd5b8082019050905081555060013360e05260c052604060c02080546004358181830110156105b557600080fd5b8082019050905081555060043561014052337f30385c845b448a36257a6a1716e6ad2e1bc2cbe333cde1e69fe849ad6511adfe6020610140a2005b63b01e369f600051141561066357341561060957600080fd5b600435602051811061061a57600080fd5b50602435602051811061062c57600080fd5b50600554331461063b57600080fd5b6006541561064857600080fd5b6007541561065557600080fd5b600435600655602435600755005b6318160ddd600051141561068a57341561067c57600080fd5b60085460005260206000f350005b63a9059cbb600051141561075b5734156106a357600080fd5b60043560205181106106b457600080fd5b506000600435186106c457600080fd5b60013360e05260c052604060c0208054602435808210156106e457600080fd5b80820390509050815550600160043560e05260c052604060c020805460243581818301101561071257600080fd5b8082019050905081555060243561014052600435337fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b6323b872dd600051141561088957341561077457600080fd5b600435602051811061078557600080fd5b50602435602051811061079757600080fd5b506000600435186107a757600080fd5b6000602435186107b657600080fd5b600160043560e05260c052604060c0208054604435808210156107d857600080fd5b80820390509050815550600160243560e05260c052604060c020805460443581818301101561080657600080fd5b80820190509050815550600060043560e05260c052604060c0203360e05260c052604060c02080546044358082101561083e57600080fd5b80820390509050815550604435610140526024356004357fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020610140a3600160005260206000f350005b63313ce56760005114156108b05734156108a257600080fd5b60025460005260206000f350005b6395d89b4160005114156109645734156108c957600080fd5b60038060c052602060c020610180602082540161012060006002818352015b826101205160200211156108fb5761091d565b61012051850154610120516020028501525b81516001018083528114156108e8575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6306fdde036000511415610a1857341561097d57600080fd5b60048060c052602060c020610180602082540161012060006002818352015b826101205160200211156109af576109d1565b61012051850154610120516020028501525b815160010180835281141561099c575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b5b60006000fd",
  "source": "# @notice Implementation of an ERC20 compatible token which is both burnable and mintable\r\n# @dev Implements the ERC20 interface\r\n\r\nApproval: event({owner: indexed(address), spender: indexed(address), amount: wei_value})\r\nBurned: event({burner: indexed(address), amount: wei_value})\r\nMinted: event({to: indexed(address), amount: wei_value})\r\nTransfer: event({source: indexed(address), to: indexed(address), amount: wei_value})\r\n\r\nallowances: map(address, map(address, wei_value))\r\nbalances: map(address, wei_value)\r\ndecimals: public(uint256)\r\nsymbol: public(string[4])\r\nname: public(string[8])\r\nowner_address: address\r\nreserve_address: address\r\nlisting_address: address\r\nsupply: wei_value\r\n\r\n@public\r\ndef __init__(initial_balance: wei_value):\r\n  self.owner_address = msg.sender\r\n  self.balances[self.owner_address] = initial_balance\r\n  self.decimals = 18\r\n  self.symbol = \"ECO\"\r\n  self.name = \"Emerald\"\r\n  self.supply = initial_balance\r\n  log.Transfer(ZERO_ADDRESS, self.owner_address, initial_balance)\r\n\r\n@public\r\n@constant\r\ndef allowance(owner: address, spender: address) -> wei_value:\r\n  \"\"\"\r\n  @notice Fetch the amount a given spender is allowed to use on the owner's behalf\r\n  @param owner Who owns the funds\r\n  @param spender The appointed spender of said funds\r\n  @return Said amount\r\n  \"\"\"\r\n  return self.allowances[owner][spender]\r\n\r\n\r\n@public\r\ndef approve(spender: address, amount: wei_value) -> bool:\r\n  \"\"\"\r\n  @notice Approve a given spender for a given amount of funds\r\n  @dev Note that there is an attack surface area here that someone may use both the\r\n  old and new amounts via unfortunate TX ordering. A possible solution is to first\r\n  reduce the spender's amount to 0 - then set the desired amt afterward. See\r\n  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n  @return true if successful\r\n  \"\"\"\r\n  self.allowances[msg.sender][spender] = amount\r\n  log.Approval(msg.sender, spender, amount)\r\n  return True\r\n\r\n\r\n@public\r\n@constant\r\ndef balanceOf(owner: address) -> wei_value:\r\n  \"\"\"\r\n  @notice Fetch the balance of the given address\r\n  @param owner The address to fetch the balance of\r\n  @return Balance of said address\r\n  \"\"\"\r\n  return self.balances[owner]\r\n\r\n\r\n@public\r\n@constant\r\ndef getPrivileged() -> (address, address):\r\n  \"\"\"\r\n  @notice return the address(es) of contracts that are recognized as being privileged\r\n  @return The address(es)\r\n  \"\"\"\r\n  return (self.reserve_address, self.listing_address)\r\n\r\n\r\n@public\r\n@constant\r\ndef hasPrivilege(sender: address) -> bool:\r\n  \"\"\"\r\n  @notice Return a bool indicating whether the given address is a member of this contracts privileged group\r\n  @return bool\r\n  \"\"\"\r\n  return (sender == self.reserve_address or sender == self.listing_address)\r\n\r\n\r\n@public\r\ndef burn(amount: wei_value):\r\n  \"\"\"\r\n  @notice Burns the given amount of token wei\r\n  @dev We only allow the market contract to call burn\r\n  @param amount The amount to burn\r\n  \"\"\"\r\n  # only the listing may call burn\r\n  assert msg.sender == self.listing_address\r\n  self.balances[msg.sender] -= amount\r\n  self.supply -= amount\r\n  log.Burned(msg.sender, amount)\r\n\r\n\r\n@public\r\ndef burnAll(owner: address):\r\n  \"\"\"\r\n  @notice Burns all market token associated with an address\r\n  @dev We only allow the market contract to call burnAll\r\n  @param address The owner of the tokens being burnt\r\n  \"\"\"\r\n  # only the reserve may call burn all\r\n  assert msg.sender == self.reserve_address\r\n  bal: wei_value = self.balances[owner]\r\n  self.supply -= bal\r\n  clear(self.balances[owner])\r\n  clear(self.allowances[owner][msg.sender])\r\n  log.Burned(owner, bal)\r\n\r\n\r\n@public\r\ndef decreaseAllowance(spender: address, amount: wei_value) -> bool:\r\n  \"\"\"\r\n  @notice Decrement the amount allowed to a spender by the given amount\r\n  @dev If the given amount is > the actual allowance we set it to 0\r\n  @param spender The spender of the funds\r\n  @param amount The amount to decrease a previous allowance by\r\n  @return True if successful\r\n  \"\"\"\r\n  self.allowances[msg.sender][spender] -= amount\r\n  log.Approval(msg.sender, spender, self.allowances[msg.sender][spender])\r\n  return True\r\n\r\n\r\n@public\r\ndef increaseAllowance(spender: address, amount: wei_value) -> bool:\r\n  \"\"\"\r\n  @notice Increase the amount a spender has allotted to them, by the owner, by the given amount\r\n  @param spender The address whose allowance to increase\r\n  @param amount The amount to increase by\r\n  return True if successful\r\n  \"\"\"\r\n  self.allowances[msg.sender][spender] += amount\r\n  log.Approval(msg.sender, spender, self.allowances[msg.sender][spender])\r\n  return True\r\n\r\n\r\n@public\r\ndef mint(amount: wei_value):\r\n  \"\"\"\r\n  @notice Create new Market Token funds and add them to the Market Contract balance\r\n  @dev We only allow the Market Contract to call for minting\r\n  \"\"\"\r\n  # either may call mint\r\n  assert msg.sender == self.reserve_address or msg.sender == self.listing_address\r\n  self.supply += amount\r\n  self.balances[msg.sender] += amount\r\n  log.Minted(msg.sender, amount)\r\n  # TODO look at implementing a mintFor method to avoid mint followed by immediate transfer\r\n\r\n\r\n# TODO look into the @noreentrant decorator\r\n@public\r\ndef setPrivileged(reserve: address, listing: address):\r\n  \"\"\"\r\n  @notice We restrict some activities to only privileged contracts. Can only be called once.\r\n  @dev We only allow the owner to set the privileged address(es)\r\n  @param reserve The deployed address of the reserve Contract\r\n  @param listing The deployed address of the Listing Contract\r\n  \"\"\"\r\n  assert msg.sender == self.owner_address\r\n  assert self.reserve_address == ZERO_ADDRESS\r\n  assert self.listing_address == ZERO_ADDRESS\r\n  self.reserve_address = reserve\r\n  self.listing_address = listing\r\n\r\n\r\n@public\r\n@constant\r\ndef totalSupply() -> wei_value:\r\n  \"\"\"\r\n  @notice Total number of tokens, in wei, that exist\r\n  @return The current total supply\r\n  \"\"\"\r\n  return self.supply\r\n\r\n\r\n@public\r\ndef transfer(to: address, amount: wei_value) -> bool:\r\n  \"\"\"\r\n  @notice Move funds from the sender to a given address\r\n  @param to The reciever of the funds\r\n  @param amount How much to transfer\r\n  @return true if successful\r\n  \"\"\"\r\n  assert to != ZERO_ADDRESS\r\n  self.balances[msg.sender] -= amount\r\n  self.balances[to] += amount\r\n  log.Transfer(msg.sender, to, amount)\r\n  return True\r\n\r\n\r\n@public\r\ndef transferFrom(source: address, to: address, amount: wei_value) -> bool:\r\n  \"\"\"\r\n  @notice Move funds from one address to another\r\n  @dev The allowance to `source` by `sender` is enforced (and decremented) here\r\n  @param source Where the funds originate\r\n  @param to Where the funds are going\r\n  @param amount How much\r\n  @return true if successful\r\n  \"\"\"\r\n  assert source != ZERO_ADDRESS\r\n  assert to != ZERO_ADDRESS\r\n  self.balances[source] -= amount\r\n  self.balances[to] += amount\r\n  self.allowances[source][msg.sender] -= amount\r\n  log.Transfer(source, to, amount)\r\n  return True",
  "sourcePath": "C:/Users/alexa/OneDrive/Documents/Master/Blockchain/Projects/Emerald_Project/contracts/legacy/v0-legacy/ECOToken.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b14+commit.49b201c"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-22T19:18:03.782Z"
}