{
  "contractName": "Genesis",
  "abi": [
    {
      "name": "Write",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "key",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Exercise",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "key",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Close",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "key",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Mature",
      "inputs": [
        {
          "type": "address",
          "name": "contract_addr",
          "indexed": true
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Payment",
      "inputs": [
        {
          "type": "uint256",
          "name": "amount",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "address",
          "name": "source",
          "indexed": true
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Transfer",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Approval",
      "inputs": [
        {
          "type": "address",
          "name": "_owner",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_spender",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_value",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "constant": false,
      "payable": true,
      "type": "fallback"
    },
    {
      "name": "setup",
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_controller"
        },
        {
          "type": "string",
          "name": "_name"
        },
        {
          "type": "string",
          "name": "_symbol"
        },
        {
          "type": "uint256",
          "name": "_ratio"
        },
        {
          "type": "address",
          "name": "_strikeAsset_address"
        },
        {
          "type": "address",
          "name": "_underlyingAsset_address"
        },
        {
          "type": "uint256[4]",
          "name": "_set"
        },
        {
          "type": "address[4]",
          "name": "_tokens"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 957493
    },
    {
      "name": "activate",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 143678
    },
    {
      "name": "isMature",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 37541
    },
    {
      "name": "write",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "deposit"
        },
        {
          "type": "address",
          "name": "_tokenAddress"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 222567
    },
    {
      "name": "close",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "amount"
        },
        {
          "type": "address",
          "name": "_tokenAddress"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 47729
    },
    {
      "name": "exercise",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "amount"
        },
        {
          "type": "address",
          "name": "_tokenAddress"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 2534035
    },
    {
      "name": "expire",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 27908786
    },
    {
      "name": "factory",
      "outputs": [
        {
          "type": "address",
          "unit": "Factory",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 761
    },
    {
      "name": "strikeAsset",
      "outputs": [
        {
          "type": "address",
          "unit": "StrikeAsset",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 791
    },
    {
      "name": "underlyingAsset",
      "outputs": [
        {
          "type": "address",
          "unit": "UnderlyingAsset",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 821
    },
    {
      "name": "wax",
      "outputs": [
        {
          "type": "address",
          "unit": "Wax",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 851
    },
    {
      "name": "genesisToken",
      "outputs": [
        {
          "type": "address",
          "unit": "GenesisToken",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 881
    },
    {
      "name": "instrumentController",
      "outputs": [
        {
          "type": "address",
          "unit": "InstrumentController",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 911
    },
    {
      "name": "admin",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 941
    },
    {
      "name": "strike",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 971
    },
    {
      "name": "underlying",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1001
    },
    {
      "name": "maturity",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1031
    },
    {
      "name": "premium",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1061
    },
    {
      "name": "expired",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1091
    },
    {
      "name": "ratio",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1121
    },
    {
      "name": "name",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5753
    },
    {
      "name": "symbol",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5783
    },
    {
      "name": "decimals",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1211
    },
    {
      "name": "balanceOf",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1395
    },
    {
      "name": "total_supply",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1271
    },
    {
      "name": "minter",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1301
    },
    {
      "name": "set",
      "outputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1530
    },
    {
      "name": "tokens",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1560
    },
    {
      "name": "leg",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "bytes32",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1506
    },
    {
      "name": "timestamps",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "unit": "sec",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1536
    },
    {
      "name": "lockBook__locks__user",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1710
    },
    {
      "name": "lockBook__locks__underlying_amount",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1746
    },
    {
      "name": "lockBook__lock_key",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1589
    },
    {
      "name": "lockBook__lock_length",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1619
    },
    {
      "name": "lockBook__highest_lock",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1649
    },
    {
      "name": "highest_key",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1601
    },
    {
      "name": "user_to_key",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1785
    },
    {
      "name": "test",
      "outputs": [
        {
          "type": "bytes32",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1661
    },
    {
      "name": "udr_address",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1691
    }
  ],
  "bytecode": "0x611d0156600436101561000d57611ccf565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526346da02fc600051141561039d5734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060606024356004016101403760406024356004013511156100ec57600080fd5b60606044356004016101c037604060443560040135111561010c57600080fd5b608435602051811061011d57600080fd5b5060a435602051811061012f57600080fd5b5061014435602051811061014257600080fd5b5061016435602051811061015557600080fd5b5061018435602051811061016857600080fd5b506101a435602051811061017b57600080fd5b5060003314156006541560005415161661019457600080fd5b33600055600435600555600435600655601460c052602060c02060c4803582558060200135600183015580604001356002830155806060013560038301555050601560c052602060c020610144803582558060200135600183015580604001356002830155806060013560038301555050610144356004556004543b61021957600080fd5b600454301861022757600080fd5b60206102a060046317d70f7c6102405261025c6004545afa61024857600080fd5b6000506102a051601b5560843560015560a43560025561014080600d60c052602060c020602082510161012060006003818352015b82610120516020021115610290576102b2565b61012051602002850151610120518501555b815160010180835281141561027d575b5050505050506101c080600e60c052602060c020602082510161012060006003818352015b826101205160200211156102ea5761030c565b61012051602002850151610120518501555b81516001018083528114156102d7575b505050505050670de0b6b3a7640000600f556000601060043560e05260c052604060c02055600060125560043560135560006102c05260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206102c0a3606435600c5533601860c052602060c020600060e05260c052604060c02060c052602060c0205560a435601c55005b630f15f4c0600051141561042a5734156103b657600080fd5b61014060006004818352015b61014051600481106103d357600080fd5b601560c052602060c0200154601761014051600481106103f257600080fd5b601460c052602060c020015460e05260c052604060c020555b81516001018083528114156103c2575b5050600160005260206000f350005b63ae4e7fdf600051141561049e57341561044357600080fd5b6003543b61045057600080fd5b600354301861045e57600080fd5b60206101c060246307757be1610140526009546101605261015c6003545afa61048657600080fd5b6000506101c051600b55600b5460005260206000f350005b63f5a19cb360005114156107b95734156104b757600080fd5b60243560205181106104c857600080fd5b506000610140526000601a3360e05260c052604060c02054111561054057601a3360e05260c052604060c02054610140526001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001805460043581818301101561053157600080fd5b808201905090508155506105d5565b6002601860c052602060c0200154600181818301101561055f57600080fd5b80820190509050610140526002601860c052602060c020018054600181818301101561058a57600080fd5b8082019050905081555061014051601a3360e05260c052604060c02055601860c052602060c0206101405160e05260c052604060c02060c052602060c0203381556004356001820155505b6003601860c052602060c02001546001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001541115610649576001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001546003601860c052602060c0200155610140516019555b6002543b61065657600080fd5b600254301861066457600080fd5b602061022060646323b872dd610160523361018052306101a0526004356101c05261017c60006002545af161069857600080fd5b600050610220506005543b6106ac57600080fd5b60055430186106ba57600080fd5b6000600060e460806360c6a3c8610240528061026052600e808060c052602060c0208361026001602082540161012060006003818352015b8261012051602002111561070557610727565b61012051850154610120516020028501525b81516001018083528114156106f2575b5050505050508060c052602060c02054820160206001820306601f820103905060200191505033610280526004356102a0526024356102c05261025c905060006005545af161077557600080fd5b60043561038052610140516103a052337f33d8dc4a860afa0606947f2b214f16e21e7eac41e3eb6642e859d9626d002ef66040610380a2600160005260206000f350005b63d3d202fd6000511415610a4c5734156107d257600080fd5b60243560205181106107e357600080fd5b50601a3360e05260c052604060c02054610140526004356001601860c052602060c0206101405160e05260c052604060c02060c052602060c0200154101561082a57600080fd5b6004356024353b61083a57600080fd5b602435301861084857600080fd5b60206101e060246370a0823161016052336101805261017c6024355afa61086e57600080fd5b6000506101e051101561088057600080fd5b6001601860c052602060c0206101405160e05260c052604060c02060c052602060c020018054600435808210156108b657600080fd5b808203905090508155506005543b6108cd57600080fd5b60055430186108db57600080fd5b6000600060e4608063138aa5cd610200528061022052600e808060c052602060c0208361022001602082540161012060006003818352015b8261012051602002111561092657610948565b61012051850154610120516020028501525b8151600101808352811415610913575b5050505050508060c052602060c02054820160206001820306601f82010390506020019150503361024052600435610260526024356102805261021c905060006005545af161099657600080fd5b6002543b6109a357600080fd5b60025430186109b157600080fd5b60206103e0604463a9059cbb6103405233610360526004356103805261035c60006002545af16109e057600080fd5b6000506103e050600435610400526101405161042052601860c052602060c0206101405160e05260c052604060c02060c052602060c020547f9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e06040610400a2600160005260206000f350005b631b6b729860005114156113a4573415610a6557600080fd5b6024356020518110610a7657600080fd5b5060043560103360e05260c052604060c020541015610a9457600080fd5b6007546004358082028215828483041417610aae57600080fd5b80905090509050600f548080610ac357600080fd5b820490509050610140526008546004358082028215828483041417610ae757600080fd5b80905090509050600f548080610afc57600080fd5b820490509050610160526001543b610b1357600080fd5b6001543018610b2157600080fd5b602061024060646323b872dd61018052336101a052306101c052610140516101e05261019c60006001545af1610b5657600080fd5b600050610240506002543b610b6a57600080fd5b6002543018610b7857600080fd5b6020610300604463a9059cbb610260523361028052610160516102a05261027c60006002545af1610ba857600080fd5b6000506103005060006103205260006103405261036060016103ff818352015b610360516000811215610bda57600080fd5b61034052610160516003601860c052602060c02001541115610c2757601860c052602060c02060195460e05260c052604060c02060c052602060c020546103205260195461034052610c92565b610160516001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001541115610c8157601860c052602060c0206103405160e05260c052604060c02060c052602060c0205461032052610c92565b5b8151600101808352811415610bc8575b50506103205115156111f45761038060016002818352015b610380516000811215610cbc57600080fd5b61034052601860c052602060c0206103405160e05260c052604060c02060c052602060c020546103a0526001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001546103c0526103c051600f548082028215828483041417610d2a57600080fd5b809050905090506008548080610d3f57600080fd5b8204905090506103e052610160516103c0511115610d8257601860c052602060c0206103405160e05260c052604060c02060c052602060c0205461032052610fd5565b6103a0511515610dcd57601860c052602060c02061034051600180821015610da957600080fd5b8082039050905060e05260c052604060c02060c052602060c020546103a052610fd5565b6001543b610dda57600080fd5b6001543018610de857600080fd5b60206104a0604463a9059cbb610400526103a05161042052600754600f548080610e1157600080fd5b8204905090506103e0518082028215828483041417610e2f57600080fd5b809050905090506104405261041c60006001545af1610e4d57600080fd5b6000506104a05061016080516103c05180821015610e6a57600080fd5b808203905090508152506103e0516104c052610340516104e052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d60406104c0a26005543b610eb957600080fd5b6005543018610ec757600080fd5b6000600060e4608063138aa5cd610500528061052052600e808060c052602060c0208361052001602082540161012060006003818352015b82610120516020021115610f1257610f34565b61012051850154610120516020028501525b8151600101808352811415610eff575b5050505050508060c052602060c02054820160206001820306601f820103905060200191505033610540526103e051610560526024356105805261051c905060006005545af1610f8357600080fd5b6001601860c052602060c0206103405160e05260c052604060c02060c052602060c0200180546103c05180821015610fba57600080fd5b808203905090508155505b8151600101808352811415610caa575b50506001543b610fe457600080fd5b6001543018610ff257600080fd5b60206106e0604463a9059cbb610640526103205161066052600754600854808061101b57600080fd5b82049050905061016051808202821582848304141761103957600080fd5b809050905090506106805261065c60006001545af161105757600080fd5b6000506106e05061016051600854808061107057600080fd5b820490509050600f54808202821582848304141761108d57600080fd5b809050905090506107005261070051610720526103405161074052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d6040610720a26005543b6110dd57600080fd5b60055430186110eb57600080fd5b6000600060e4608063138aa5cd610760528061078052600e808060c052602060c0208361078001602082540161012060006003818352015b8261012051602002111561113657611158565b61012051850154610120516020028501525b8151600101808352811415611123575b5050505050508060c052602060c02054820160206001820306601f8201039050602001915050336107a052610700516107c0526024356107e05261077c905060006005545af16111a757600080fd5b6001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001805461016051808210156111de57600080fd5b80820390509050815550600160005260206000f3505b6001543b61120157600080fd5b600154301861120f57600080fd5b6020610940604463a9059cbb6108a052610320516108c052610140516108e0526108bc60006001545af161124257600080fd5b600050610940506001601860c052602060c0206103405160e05260c052604060c02060c052602060c020018054610160518082101561128057600080fd5b80820390509050815550600435610960526103405161098052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d6040610960a26005543b6112ce57600080fd5b60055430186112dc57600080fd5b6000600060e4608063138aa5cd6109a052806109c052600e808060c052602060c020836109c001602082540161012060006003818352015b8261012051602002111561132757611349565b61012051850154610120516020028501525b8151600101808352811415611314575b5050505050508060c052602060c02054820160206001820306601f8201039050602001915050336109e052600435610a0052602435610a20526109bc905060006005545af161139757600080fd5b600160005260206000f350005b6379599f96600051141561159c5734156113bd57600080fd5b6001600b55600b546113ce57600080fd5b60016101405261016060016103fe818352015b601860c052602060c0206101605160008112156113fd57600080fd5b60e05260c052604060c02060c052602060c02054151561141c57611588565b61016051600081121561142e57600080fd5b610140526001601860c052602060c0206101405160e05260c052604060c02060c052602060c020015461018052601860c052602060c0206101405160e05260c052604060c02060c052602060c020546101a05260006101805111156114e3576002543b61149a57600080fd5b60025430186114a857600080fd5b6020610260604463a9059cbb6101c0526101a0516101e05261018051610200526101dc60006002545af16114db57600080fd5b600050610260505b60006001601860c052602060c0206101405160e05260c052604060c02060c052602060c020015561018051600854808061151c57600080fd5b820490509050600f54808202821582848304141761153957600080fd5b8090509050905061028052610140516102a0526101a0517f9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e06040610280a25b81516001018083528114156113e1575b50506000601255600160005260206000f350005b63c45a015560005114156115c35734156115b557600080fd5b60005460005260206000f350005b6317d69bc860005114156115ea5734156115dc57600080fd5b60015460005260206000f350005b637158da7c600051141561161157341561160357600080fd5b60025460005260206000f350005b639c550e81600051141561163857341561162a57600080fd5b60035460005260206000f350005b63fda237f8600051141561165f57341561165157600080fd5b60045460005260206000f350005b636e2795f1600051141561168657341561167857600080fd5b60055460005260206000f350005b63f851a44060005114156116ad57341561169f57600080fd5b60065460005260206000f350005b63ad8f500860005114156116d45734156116c657600080fd5b60075460005260206000f350005b636f307dc360005114156116fb5734156116ed57600080fd5b60085460005260206000f350005b63204f83f9600051141561172257341561171457600080fd5b60095460005260206000f350005b63e0a73a93600051141561174957341561173b57600080fd5b600a5460005260206000f350005b634c2067c7600051141561177057341561176257600080fd5b600b5460005260206000f350005b6371ca337d600051141561179757341561178957600080fd5b600c5460005260206000f350005b6306fdde03600051141561184b5734156117b057600080fd5b600d8060c052602060c020610180602082540161012060006003818352015b826101205160200211156117e257611804565b61012051850154610120516020028501525b81516001018083528114156117cf575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b4160005114156118ff57341561186457600080fd5b600e8060c052602060c020610180602082540161012060006003818352015b82610120516020021115611896576118b8565b61012051850154610120516020028501525b8151600101808352811415611883575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce567600051141561192657341561191857600080fd5b600f5460005260206000f350005b6370a08231600051141561196d57341561193f57600080fd5b600435602051811061195057600080fd5b50601060043560e05260c052604060c0205460005260206000f350005b633940e9ee600051141561199457341561198657600080fd5b60125460005260206000f350005b630754617260005114156119bb5734156119ad57600080fd5b60135460005260206000f350005b63795313b06000511415611a205734156119d457600080fd5b606051600435806040519013156119ea57600080fd5b80919012156119f857600080fd5b5060043560048110611a0957600080fd5b601460c052602060c020015460005260206000f350005b6398ad389d6000511415611a85573415611a3957600080fd5b60605160043580604051901315611a4f57600080fd5b8091901215611a5d57600080fd5b5060043560048110611a6e57600080fd5b601560c052602060c020015460005260206000f350005b63f127e6786000511415611aba573415611a9e57600080fd5b601660043560e05260c052604060c0205460005260206000f350005b638bc33af36000511415611aef573415611ad357600080fd5b601760043560e05260c052604060c0205460005260206000f350005b633d32d1116000511415611b34573415611b0857600080fd5b601860c052602060c02060043560e05260c052604060c02060c052602060c0205460005260206000f350005b6394f2196b6000511415611b7c573415611b4d57600080fd5b6001601860c052602060c02060043560e05260c052604060c02060c052602060c020015460005260206000f350005b631958e1f06000511415611bae573415611b9557600080fd5b6001601860c052602060c020015460005260206000f350005b63e6b316f06000511415611be0573415611bc757600080fd5b6002601860c052602060c020015460005260206000f350005b637047a0566000511415611c12573415611bf957600080fd5b6003601860c052602060c020015460005260206000f350005b63760a11c16000511415611c39573415611c2b57600080fd5b60195460005260206000f350005b63dd6b337f6000511415611c80573415611c5257600080fd5b6004356020518110611c6357600080fd5b50601a60043560e05260c052604060c0205460005260206000f350005b63f8a8fd6d6000511415611ca7573415611c9957600080fd5b601b5460005260206000f350005b63a6abeea56000511415611cce573415611cc057600080fd5b601c5460005260206000f350005b5b3461014052337ff817bef87c74de34ab725f43b121c1dff5324aa363f7b9ac176b9aee5115230e6020610140a25b610004611d0103610004600039610004611d01036000f3",
  "deployedBytecode": "0x600436101561000d57611ccf565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526346da02fc600051141561039d5734156100ba57600080fd5b60043560205181106100cb57600080fd5b5060606024356004016101403760406024356004013511156100ec57600080fd5b60606044356004016101c037604060443560040135111561010c57600080fd5b608435602051811061011d57600080fd5b5060a435602051811061012f57600080fd5b5061014435602051811061014257600080fd5b5061016435602051811061015557600080fd5b5061018435602051811061016857600080fd5b506101a435602051811061017b57600080fd5b5060003314156006541560005415161661019457600080fd5b33600055600435600555600435600655601460c052602060c02060c4803582558060200135600183015580604001356002830155806060013560038301555050601560c052602060c020610144803582558060200135600183015580604001356002830155806060013560038301555050610144356004556004543b61021957600080fd5b600454301861022757600080fd5b60206102a060046317d70f7c6102405261025c6004545afa61024857600080fd5b6000506102a051601b5560843560015560a43560025561014080600d60c052602060c020602082510161012060006003818352015b82610120516020021115610290576102b2565b61012051602002850151610120518501555b815160010180835281141561027d575b5050505050506101c080600e60c052602060c020602082510161012060006003818352015b826101205160200211156102ea5761030c565b61012051602002850151610120518501555b81516001018083528114156102d7575b505050505050670de0b6b3a7640000600f556000601060043560e05260c052604060c02055600060125560043560135560006102c05260043560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60206102c0a3606435600c5533601860c052602060c020600060e05260c052604060c02060c052602060c0205560a435601c55005b630f15f4c0600051141561042a5734156103b657600080fd5b61014060006004818352015b61014051600481106103d357600080fd5b601560c052602060c0200154601761014051600481106103f257600080fd5b601460c052602060c020015460e05260c052604060c020555b81516001018083528114156103c2575b5050600160005260206000f350005b63ae4e7fdf600051141561049e57341561044357600080fd5b6003543b61045057600080fd5b600354301861045e57600080fd5b60206101c060246307757be1610140526009546101605261015c6003545afa61048657600080fd5b6000506101c051600b55600b5460005260206000f350005b63f5a19cb360005114156107b95734156104b757600080fd5b60243560205181106104c857600080fd5b506000610140526000601a3360e05260c052604060c02054111561054057601a3360e05260c052604060c02054610140526001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001805460043581818301101561053157600080fd5b808201905090508155506105d5565b6002601860c052602060c0200154600181818301101561055f57600080fd5b80820190509050610140526002601860c052602060c020018054600181818301101561058a57600080fd5b8082019050905081555061014051601a3360e05260c052604060c02055601860c052602060c0206101405160e05260c052604060c02060c052602060c0203381556004356001820155505b6003601860c052602060c02001546001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001541115610649576001601860c052602060c0206101405160e05260c052604060c02060c052602060c02001546003601860c052602060c0200155610140516019555b6002543b61065657600080fd5b600254301861066457600080fd5b602061022060646323b872dd610160523361018052306101a0526004356101c05261017c60006002545af161069857600080fd5b600050610220506005543b6106ac57600080fd5b60055430186106ba57600080fd5b6000600060e460806360c6a3c8610240528061026052600e808060c052602060c0208361026001602082540161012060006003818352015b8261012051602002111561070557610727565b61012051850154610120516020028501525b81516001018083528114156106f2575b5050505050508060c052602060c02054820160206001820306601f820103905060200191505033610280526004356102a0526024356102c05261025c905060006005545af161077557600080fd5b60043561038052610140516103a052337f33d8dc4a860afa0606947f2b214f16e21e7eac41e3eb6642e859d9626d002ef66040610380a2600160005260206000f350005b63d3d202fd6000511415610a4c5734156107d257600080fd5b60243560205181106107e357600080fd5b50601a3360e05260c052604060c02054610140526004356001601860c052602060c0206101405160e05260c052604060c02060c052602060c0200154101561082a57600080fd5b6004356024353b61083a57600080fd5b602435301861084857600080fd5b60206101e060246370a0823161016052336101805261017c6024355afa61086e57600080fd5b6000506101e051101561088057600080fd5b6001601860c052602060c0206101405160e05260c052604060c02060c052602060c020018054600435808210156108b657600080fd5b808203905090508155506005543b6108cd57600080fd5b60055430186108db57600080fd5b6000600060e4608063138aa5cd610200528061022052600e808060c052602060c0208361022001602082540161012060006003818352015b8261012051602002111561092657610948565b61012051850154610120516020028501525b8151600101808352811415610913575b5050505050508060c052602060c02054820160206001820306601f82010390506020019150503361024052600435610260526024356102805261021c905060006005545af161099657600080fd5b6002543b6109a357600080fd5b60025430186109b157600080fd5b60206103e0604463a9059cbb6103405233610360526004356103805261035c60006002545af16109e057600080fd5b6000506103e050600435610400526101405161042052601860c052602060c0206101405160e05260c052604060c02060c052602060c020547f9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e06040610400a2600160005260206000f350005b631b6b729860005114156113a4573415610a6557600080fd5b6024356020518110610a7657600080fd5b5060043560103360e05260c052604060c020541015610a9457600080fd5b6007546004358082028215828483041417610aae57600080fd5b80905090509050600f548080610ac357600080fd5b820490509050610140526008546004358082028215828483041417610ae757600080fd5b80905090509050600f548080610afc57600080fd5b820490509050610160526001543b610b1357600080fd5b6001543018610b2157600080fd5b602061024060646323b872dd61018052336101a052306101c052610140516101e05261019c60006001545af1610b5657600080fd5b600050610240506002543b610b6a57600080fd5b6002543018610b7857600080fd5b6020610300604463a9059cbb610260523361028052610160516102a05261027c60006002545af1610ba857600080fd5b6000506103005060006103205260006103405261036060016103ff818352015b610360516000811215610bda57600080fd5b61034052610160516003601860c052602060c02001541115610c2757601860c052602060c02060195460e05260c052604060c02060c052602060c020546103205260195461034052610c92565b610160516001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001541115610c8157601860c052602060c0206103405160e05260c052604060c02060c052602060c0205461032052610c92565b5b8151600101808352811415610bc8575b50506103205115156111f45761038060016002818352015b610380516000811215610cbc57600080fd5b61034052601860c052602060c0206103405160e05260c052604060c02060c052602060c020546103a0526001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001546103c0526103c051600f548082028215828483041417610d2a57600080fd5b809050905090506008548080610d3f57600080fd5b8204905090506103e052610160516103c0511115610d8257601860c052602060c0206103405160e05260c052604060c02060c052602060c0205461032052610fd5565b6103a0511515610dcd57601860c052602060c02061034051600180821015610da957600080fd5b8082039050905060e05260c052604060c02060c052602060c020546103a052610fd5565b6001543b610dda57600080fd5b6001543018610de857600080fd5b60206104a0604463a9059cbb610400526103a05161042052600754600f548080610e1157600080fd5b8204905090506103e0518082028215828483041417610e2f57600080fd5b809050905090506104405261041c60006001545af1610e4d57600080fd5b6000506104a05061016080516103c05180821015610e6a57600080fd5b808203905090508152506103e0516104c052610340516104e052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d60406104c0a26005543b610eb957600080fd5b6005543018610ec757600080fd5b6000600060e4608063138aa5cd610500528061052052600e808060c052602060c0208361052001602082540161012060006003818352015b82610120516020021115610f1257610f34565b61012051850154610120516020028501525b8151600101808352811415610eff575b5050505050508060c052602060c02054820160206001820306601f820103905060200191505033610540526103e051610560526024356105805261051c905060006005545af1610f8357600080fd5b6001601860c052602060c0206103405160e05260c052604060c02060c052602060c0200180546103c05180821015610fba57600080fd5b808203905090508155505b8151600101808352811415610caa575b50506001543b610fe457600080fd5b6001543018610ff257600080fd5b60206106e0604463a9059cbb610640526103205161066052600754600854808061101b57600080fd5b82049050905061016051808202821582848304141761103957600080fd5b809050905090506106805261065c60006001545af161105757600080fd5b6000506106e05061016051600854808061107057600080fd5b820490509050600f54808202821582848304141761108d57600080fd5b809050905090506107005261070051610720526103405161074052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d6040610720a26005543b6110dd57600080fd5b60055430186110eb57600080fd5b6000600060e4608063138aa5cd610760528061078052600e808060c052602060c0208361078001602082540161012060006003818352015b8261012051602002111561113657611158565b61012051850154610120516020028501525b8151600101808352811415611123575b5050505050508060c052602060c02054820160206001820306601f8201039050602001915050336107a052610700516107c0526024356107e05261077c905060006005545af16111a757600080fd5b6001601860c052602060c0206103405160e05260c052604060c02060c052602060c02001805461016051808210156111de57600080fd5b80820390509050815550600160005260206000f3505b6001543b61120157600080fd5b600154301861120f57600080fd5b6020610940604463a9059cbb6108a052610320516108c052610140516108e0526108bc60006001545af161124257600080fd5b600050610940506001601860c052602060c0206103405160e05260c052604060c02060c052602060c020018054610160518082101561128057600080fd5b80820390509050815550600435610960526103405161098052337f7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d6040610960a26005543b6112ce57600080fd5b60055430186112dc57600080fd5b6000600060e4608063138aa5cd6109a052806109c052600e808060c052602060c020836109c001602082540161012060006003818352015b8261012051602002111561132757611349565b61012051850154610120516020028501525b8151600101808352811415611314575b5050505050508060c052602060c02054820160206001820306601f8201039050602001915050336109e052600435610a0052602435610a20526109bc905060006005545af161139757600080fd5b600160005260206000f350005b6379599f96600051141561159c5734156113bd57600080fd5b6001600b55600b546113ce57600080fd5b60016101405261016060016103fe818352015b601860c052602060c0206101605160008112156113fd57600080fd5b60e05260c052604060c02060c052602060c02054151561141c57611588565b61016051600081121561142e57600080fd5b610140526001601860c052602060c0206101405160e05260c052604060c02060c052602060c020015461018052601860c052602060c0206101405160e05260c052604060c02060c052602060c020546101a05260006101805111156114e3576002543b61149a57600080fd5b60025430186114a857600080fd5b6020610260604463a9059cbb6101c0526101a0516101e05261018051610200526101dc60006002545af16114db57600080fd5b600050610260505b60006001601860c052602060c0206101405160e05260c052604060c02060c052602060c020015561018051600854808061151c57600080fd5b820490509050600f54808202821582848304141761153957600080fd5b8090509050905061028052610140516102a0526101a0517f9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e06040610280a25b81516001018083528114156113e1575b50506000601255600160005260206000f350005b63c45a015560005114156115c35734156115b557600080fd5b60005460005260206000f350005b6317d69bc860005114156115ea5734156115dc57600080fd5b60015460005260206000f350005b637158da7c600051141561161157341561160357600080fd5b60025460005260206000f350005b639c550e81600051141561163857341561162a57600080fd5b60035460005260206000f350005b63fda237f8600051141561165f57341561165157600080fd5b60045460005260206000f350005b636e2795f1600051141561168657341561167857600080fd5b60055460005260206000f350005b63f851a44060005114156116ad57341561169f57600080fd5b60065460005260206000f350005b63ad8f500860005114156116d45734156116c657600080fd5b60075460005260206000f350005b636f307dc360005114156116fb5734156116ed57600080fd5b60085460005260206000f350005b63204f83f9600051141561172257341561171457600080fd5b60095460005260206000f350005b63e0a73a93600051141561174957341561173b57600080fd5b600a5460005260206000f350005b634c2067c7600051141561177057341561176257600080fd5b600b5460005260206000f350005b6371ca337d600051141561179757341561178957600080fd5b600c5460005260206000f350005b6306fdde03600051141561184b5734156117b057600080fd5b600d8060c052602060c020610180602082540161012060006003818352015b826101205160200211156117e257611804565b61012051850154610120516020028501525b81516001018083528114156117cf575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6395d89b4160005114156118ff57341561186457600080fd5b600e8060c052602060c020610180602082540161012060006003818352015b82610120516020021115611896576118b8565b61012051850154610120516020028501525b8151600101808352811415611883575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b63313ce567600051141561192657341561191857600080fd5b600f5460005260206000f350005b6370a08231600051141561196d57341561193f57600080fd5b600435602051811061195057600080fd5b50601060043560e05260c052604060c0205460005260206000f350005b633940e9ee600051141561199457341561198657600080fd5b60125460005260206000f350005b630754617260005114156119bb5734156119ad57600080fd5b60135460005260206000f350005b63795313b06000511415611a205734156119d457600080fd5b606051600435806040519013156119ea57600080fd5b80919012156119f857600080fd5b5060043560048110611a0957600080fd5b601460c052602060c020015460005260206000f350005b6398ad389d6000511415611a85573415611a3957600080fd5b60605160043580604051901315611a4f57600080fd5b8091901215611a5d57600080fd5b5060043560048110611a6e57600080fd5b601560c052602060c020015460005260206000f350005b63f127e6786000511415611aba573415611a9e57600080fd5b601660043560e05260c052604060c0205460005260206000f350005b638bc33af36000511415611aef573415611ad357600080fd5b601760043560e05260c052604060c0205460005260206000f350005b633d32d1116000511415611b34573415611b0857600080fd5b601860c052602060c02060043560e05260c052604060c02060c052602060c0205460005260206000f350005b6394f2196b6000511415611b7c573415611b4d57600080fd5b6001601860c052602060c02060043560e05260c052604060c02060c052602060c020015460005260206000f350005b631958e1f06000511415611bae573415611b9557600080fd5b6001601860c052602060c020015460005260206000f350005b63e6b316f06000511415611be0573415611bc757600080fd5b6002601860c052602060c020015460005260206000f350005b637047a0566000511415611c12573415611bf957600080fd5b6003601860c052602060c020015460005260206000f350005b63760a11c16000511415611c39573415611c2b57600080fd5b60195460005260206000f350005b63dd6b337f6000511415611c80573415611c5257600080fd5b6004356020518110611c6357600080fd5b50601a60043560e05260c052604060c0205460005260206000f350005b63f8a8fd6d6000511415611ca7573415611c9957600080fd5b601b5460005260206000f350005b63a6abeea56000511415611cce573415611cc057600080fd5b601c5460005260206000f350005b5b3461014052337ff817bef87c74de34ab725f43b121c1dff5324aa363f7b9ac176b9aee5115230e6020610140a2",
  "source": "# @title c.M.O.A.T: Call - Multilateral Optionality Asset Transfer\r\n# \r\n# @notice Implementation of a Tokenized Asset Transfer Agreement on the Ethereum Network\r\n# \r\n# @author Alexander Angel\r\n# \r\n# @dev Uses a factory to initialize and deploy MOAT templates\r\n#\r\n# @version 0.1.0b14\r\n\r\n\r\n# Structs\r\nstruct Account:\r\n    user: address\r\n    underlying_amount: uint256\r\n\r\n\r\nstruct LockBook:\r\n    locks: map(uint256, Account)\r\n    lock_key: uint256\r\n    lock_length: uint256\r\n    highest_lock: uint256\r\n\r\n\r\n# Interfaces\r\ncontract Factory():\r\n    def getDoz(user_addr: address) -> address:constant\r\n    def getUser(omn: address) -> address:constant\r\n\r\n\r\ncontract StrikeAsset():\r\n    def totalSupply() -> uint256:constant\r\n    def balanceOf(_owner: address) -> uint256:constant\r\n    def allowance(_owner: address, _spender: address) -> uint256:constant\r\n    def transfer(_to: address, _value: uint256) -> bool:modifying\r\n    def transferFrom(_from: address, _to: address, _value: uint256) -> bool:modifying\r\n    def approve(_spender: address, _value: uint256) -> bool:modifying\r\n\r\n\r\ncontract UnderlyingAsset():\r\n    def totalSupply() -> uint256:constant\r\n    def balanceOf(_owner: address) -> uint256:constant\r\n    def allowance(_owner: address, _spender: address) -> uint256:constant\r\n    def transfer(_to: address, _value: uint256) -> bool:modifying\r\n    def transferFrom(_from: address, _to: address, _value: uint256) -> bool:modifying\r\n    def approve(_spender: address, _value: uint256) -> bool:modifying\r\n\r\ncontract GenesisToken():\r\n    def totalSupply() -> uint256:constant\r\n    def balanceOf(_owner: address) -> uint256:constant\r\n    def allowance(_owner: address, _spender: address) -> uint256:constant\r\n    def transfer(_to: address, _value: uint256) -> bool:modifying\r\n    def transferFrom(_from: address, _to: address, _value: uint256) -> bool:modifying\r\n    def approve(_spender: address, _value: uint256) -> bool:modifying\r\n    def mint(_to: address, _value: uint256):modifying\r\n    def name() -> string[64]: constant\r\n    def symbol() -> string[64]: constant\r\n    def tokenId() -> bytes32: constant\r\n\r\n\r\n\r\ncontract Wax():\r\n    def timeToExpiry(time: timestamp) -> bool:constant\r\n\r\ncontract InstrumentController():\r\n    def mint(_instrumentSymbol: string[64], _user: address, _amount: uint256, _tokenId: address):modifying\r\n    def burn(_instrumentSymbol: string[64], _user: address, _amount: uint256, _tokenId: address):modifying\r\n\r\n# Events\r\nWrite: event({_from: indexed(address), amount: uint256, key: uint256})\r\nExercise: event({_from: indexed(address), amount: uint256, key: uint256})\r\nClose: event({_from: indexed(address), amount: uint256, key: uint256})\r\nMature: event({contract_addr: indexed(address)})\r\nPayment: event({amount: wei_value, source: indexed(address)})\r\n\r\n\r\n# EIP-20 Events\r\nTransfer: event({_from: indexed(address), _to: indexed(address), _value: uint256})\r\nApproval: event({_owner: indexed(address), _spender: indexed(address), _value: uint256})\r\n\r\n\r\n# Interface Contracts\r\nfactory: public(Factory)\r\nstrikeAsset: public(StrikeAsset)\r\nunderlyingAsset: public(UnderlyingAsset)\r\nwax: public(Wax)\r\ngenesisToken: public(GenesisToken)\r\ninstrumentController: public(InstrumentController)\r\n\r\n\r\n# Administrator - For Early Versions ONLY\r\nadmin: public(address)\r\n\r\n\r\n# Contract specific parameters\r\nstrike: public(uint256) # Denominated in strike asset\r\nunderlying: public(uint256) # Denominated in underlying asset\r\nmaturity: public(timestamp) # UNIX Timestamp\r\npremium: public(uint256) # Temporary and initial value per MOAT token\r\nexpired: public(bool) # Expired MOAT tokens are worthless\r\nratio: public(uint256)\r\n\r\n# EIP-20\r\nname: public(string[64])\r\nsymbol: public(string[64])\r\ndecimals: public(uint256)\r\nbalanceOf: public(map(address, uint256))\r\nallowances: map(address, map(address, uint256))\r\ntotal_supply: public(uint256)\r\nminter: public(address)\r\n\r\n\r\n# Specifications\r\nset: public(timestamp[4])\r\ntokens: public(address[4])\r\nleg: public(map(bytes32, address)) # Maps a token ID to an address\r\ntimestamps: public(map(timestamp, address)) # Maps a timestamp to a bytes 32 Token ID\r\n\r\n\r\n# User Claims\r\nlockBook: public(LockBook) # Struct for lists of underlying deposits\r\nhighest_key: public(uint256) # Largest underlying deposit respective key\r\nuser_to_key: public(map(address, uint256)) # Link users to their keys, 1 key per address\r\n\r\n\r\n# Test\r\ntest: public(bytes32)\r\nudr_address: public(address)\r\n\r\n# Constants\r\nMAX_KEY_LENGTH: constant(uint256) = 2**10-1 # Used for looping over the book\r\nEXPIRATION_STAMPS: constant(uint256) = 4\r\n\r\n\r\n@public\r\n@payable\r\ndef __default__():\r\n    log.Payment(msg.value, msg.sender)\r\n\r\n\r\n# Initializer\r\n@public\r\ndef setup(\r\n        _controller: address,\r\n        _name: string[64],\r\n        _symbol: string[64],\r\n        _ratio: uint256,\r\n        _strikeAsset_address: address,\r\n        _underlyingAsset_address: address,\r\n        _set: timestamp[4],\r\n        _tokens: address[4],\r\n    ):\r\n    \"\"\"\r\n    @notice                         Setup is called from the factory contract using a contract template address\r\n    @param _controller              Address of Instrument Controller\r\n    @param _name                    Name of this contract linked to its parameters\r\n    @param _symbol                  Naming convention to represent the paramers -> \r\n                                    Strike Symbol + Underlying Symbol + UNIX Timestamp + \r\n                                    Type (C or P) + # of Strike tokens per # of Underlying tokens\r\n    @param _ratio                   Strike:Underlying ratio \r\n    @param _strikeAsset_address     Address of strike asset contract\r\n    @param _underlyingAsset_address  Address of underlying asset contract\r\n    @param _set                     List of expiration times valid for contract\r\n    @param _tokens                  Array of addresses of the tokens with respective expirations\r\n    \"\"\"\r\n    assert(self.factory == ZERO_ADDRESS and self.admin == ZERO_ADDRESS) and msg.sender != ZERO_ADDRESS\r\n    \r\n    \r\n    # Administrative variables\r\n    self.factory = Factory(msg.sender)\r\n    self.instrumentController = InstrumentController(_controller)\r\n    self.admin = _controller\r\n\r\n\r\n    self.set = _set\r\n    self.tokens = _tokens\r\n\r\n    self.genesisToken = GenesisToken(_tokens[0])\r\n    self.test = self.genesisToken.tokenId()\r\n\r\n    # Interfaces\r\n    self.strikeAsset = StrikeAsset(_strikeAsset_address)\r\n    self.underlyingAsset = UnderlyingAsset(_underlyingAsset_address)\r\n\r\n    # EIP-20 Standard\r\n    self.name = _name\r\n    self.symbol = _symbol\r\n    self.decimals = 10**18\r\n    self.balanceOf[_controller] = 0\r\n    self.total_supply = 0\r\n    self.minter = _controller\r\n    log.Transfer(ZERO_ADDRESS, _controller, 0)\r\n\r\n    self.ratio = _ratio\r\n\r\n    # Set first book account to admin\r\n    self.lockBook.locks[0].user = msg.sender\r\n\r\n    # Test\r\n    self.udr_address = _underlyingAsset_address\r\n\r\n\r\n# Utility\r\n@public\r\ndef activate() -> bool:\r\n    for i in range(EXPIRATION_STAMPS):\r\n        #token: GenesisToken = GenesisToken(self.tokens[i])\r\n        #tokenId: bytes32 = GenesisToken(self.tokens[i]).tokenId()\r\n        #self.leg[tokenId] = self.tokens[i]\r\n        #self.timestamps[self.set[i]] = tokenId\r\n        self.timestamps[self.set[i]] = self.tokens[i]\r\n    return True\r\n\r\n\r\n@public\r\ndef isMature() -> bool:\r\n    \"\"\"\r\n    @dev Checks maturity conditions\r\n    \"\"\"\r\n    self.expired = self.wax.timeToExpiry(self.maturity)\r\n    return self.expired\r\n\r\n\r\n# Core\r\n@public\r\ndef write(deposit: uint256, _tokenAddress: address) -> bool:\r\n    \"\"\"\r\n    @dev Writer mints tokens: \r\n                   Underwritten Amount \r\n           cMOAT = ___________________\r\n                   Underlying Parameter\r\n    @param deposit Deposit amount of underlying assets, 18 decimal places\r\n    \"\"\"\r\n    lock_key: uint256 = 0 # Temp variable 'lock key' index\r\n    if(self.user_to_key[msg.sender] > 0): # If user has a key, use their key\r\n        lock_key = self.user_to_key[msg.sender]\r\n        self.lockBook.locks[lock_key].underlying_amount += deposit\r\n    else: # Else, increment key length, and set a new Account\r\n        lock_key = self.lockBook.lock_length + 1 # Temporary lock key is length + 1\r\n        self.lockBook.lock_length += 1 # Increment the lock key length\r\n        self.user_to_key[msg.sender] = lock_key # Set user address to lock key\r\n        self.lockBook.locks[lock_key] = Account({user: msg.sender, underlying_amount: deposit}) # Create new account at [key]\r\n    if(self.lockBook.locks[lock_key].underlying_amount > self.lockBook.highest_lock): # If underlying amount is greater, set new highest_key\r\n        self.lockBook.highest_lock = self.lockBook.locks[lock_key].underlying_amount\r\n        self.highest_key = lock_key\r\n    self.underlyingAsset.transferFrom(msg.sender, self, deposit) # User deposits underwritten amount into contract\r\n    self.instrumentController.mint(self.symbol, msg.sender, deposit, _tokenAddress)\r\n    log.Write(msg.sender, deposit, lock_key)\r\n    return True\r\n\r\n\r\n@public\r\ndef close(amount: uint256, _tokenAddress: address) -> bool:\r\n    \"\"\"\r\n    @dev Writer can burn cMOAT tokens to redeem their underlying deposits\r\n    @param amount Amount of cMOAT tokens to burn, 18 decimals  \r\n    \"\"\"\r\n    key: uint256 = self.user_to_key[msg.sender]\r\n    assert self.lockBook.locks[key].underlying_amount >= amount # Check user redeeming has underwritten\r\n    assert GenesisToken(_tokenAddress).balanceOf(msg.sender) >= amount # Check user has tokens to burn\r\n    self.lockBook.locks[key].underlying_amount -= amount\r\n    self.instrumentController.burn(self.symbol, msg.sender, amount, _tokenAddress) # Burn the cMOAT tokens that were redeemed for underwritten assets \r\n    self.underlyingAsset.transfer(msg.sender, amount) # Underlying asset redeemed to user\r\n    log.Close(self.lockBook.locks[key].user, amount, key)\r\n    return True\r\n\r\n\r\n@public\r\ndef exercise(amount: uint256, _tokenAddress: address) -> bool:\r\n    \"\"\"\r\n    @dev Exercising party exchanges strike asset for underlying asset\r\n    @param Amount of cMOAT tokens being exercised, 18 decimals\r\n    \"\"\"\r\n    assert self.balanceOf[msg.sender] >= amount\r\n    strike_payment: uint256 = self.strike * amount / self.decimals\r\n    underlying_payment: uint256 = self.underlying * amount / self.decimals\r\n    self.strikeAsset.transferFrom(msg.sender, self, strike_payment) # Deposit strike asset (10 per option)\r\n    self.underlyingAsset.transfer(msg.sender, underlying_payment) # Withdraw underlying asset (2 per option) from contract\r\n    assigned_user: address = ZERO_ADDRESS\r\n    lock_key: uint256 = 0\r\n    \r\n    \r\n    for x in range(1, MAX_KEY_LENGTH + 1): # Loops over underwriters and depletes underlying_payment outlays\r\n        lock_key = convert(x, uint256)\r\n        if(self.lockBook.highest_lock > underlying_payment): # If the highest underwritten amount > payment, assign that user\r\n            assigned_user = self.lockBook.locks[self.highest_key].user\r\n            lock_key = self.highest_key\r\n            break\r\n        if(self.lockBook.locks[lock_key].underlying_amount > underlying_payment): # If the looped user has underwritten > payment, assign that user\r\n            assigned_user = self.lockBook.locks[lock_key].user\r\n            break\r\n\r\n    \r\n    if(assigned_user == ZERO_ADDRESS): # If no assigned user, need to assign multiple users\r\n        for i in range(1, 3):\r\n            lock_key = convert(i, uint256)\r\n            user: address = self.lockBook.locks[lock_key].user # Get user address of lock_key\r\n            underlying_amount: uint256 = self.lockBook.locks[lock_key].underlying_amount # Get underlying amount of user\r\n            options_exercised: uint256 = underlying_amount * self.decimals / self.underlying  # Get max amount of options that can be exercised\r\n            if(underlying_amount > underlying_payment): # If the looped user has underwritten > underlying left, assign that user\r\n                assigned_user = self.lockBook.locks[lock_key].user\r\n                break\r\n            # We need to exercise options using multiple underwritten balances\r\n            if(user == ZERO_ADDRESS): # If we pass over all users but there are still options oustanding to be exercised, set previous user as user\r\n                user = self.lockBook.locks[lock_key - 1].user\r\n                break\r\n            self.strikeAsset.transfer(user, self.strike / self.decimals * options_exercised ) # Transfer proportional strike payment to entire balance of assigned user\r\n            underlying_payment -= underlying_amount # Update underlying payment leftover   \r\n            log.Exercise(msg.sender, options_exercised, lock_key)\r\n            self.instrumentController.burn(self.symbol, msg.sender, options_exercised, _tokenAddress) # Burn amount of tokens proportional to entire underlying balance of user\r\n            self.lockBook.locks[lock_key].underlying_amount -= underlying_amount # Update user's underlying amount\r\n        # We have a user who can pay entire leftover exercised amount\r\n        self.strikeAsset.transfer(assigned_user, self.strike / self.underlying * underlying_payment)\r\n        options_exercised: uint256 = underlying_payment / self.underlying * self.decimals\r\n        log.Exercise(msg.sender, options_exercised, lock_key)\r\n        self.instrumentController.burn(self.symbol, msg.sender, options_exercised, _tokenAddress)\r\n        self.lockBook.locks[lock_key].underlying_amount -= underlying_payment # Assigned user exercises the rest of the underlying payment\r\n        return True\r\n    \r\n    \r\n    # We have a user who can pay entire exercised amount\r\n    self.strikeAsset.transfer(assigned_user, strike_payment)\r\n    self.lockBook.locks[lock_key].underlying_amount -= underlying_payment # Assigned user pays the exercised underlying amount\r\n    log.Exercise(msg.sender, amount, lock_key)\r\n    self.instrumentController.burn(self.symbol, msg.sender, amount, _tokenAddress)\r\n    return True\r\n\r\n\r\n@public\r\ndef expire() -> bool:\r\n    \"\"\"\r\n    @notice Any user can call this public function to expire this specific cMOAT token\r\n    @dev    Sets total supply to 0, does not burn any tokens\r\n    \"\"\"\r\n    self.expired = True # FIX: temporary test store\r\n    assert self.expired # cMOAT's UNIX timestamp < block.timestamp\r\n    key: uint256 = 1 # Temporary key value \r\n    for x in range(1, MAX_KEY_LENGTH): # For each key, redeem the tokens to their underwriters, burn the cMOAT tokens\r\n        if(self.lockBook.locks[convert(x, uint256)].user == ZERO_ADDRESS): # If we reach end of users in the lock book, end the loop\r\n            break\r\n        key = convert(x, uint256)\r\n        underlying_amt: uint256 = self.lockBook.locks[key].underlying_amount\r\n        user: address = self.lockBook.locks[key].user\r\n        if(underlying_amt > 0):\r\n            self.underlyingAsset.transfer(user, underlying_amt) # underlying asset sent to writer\r\n        self.lockBook.locks[key].underlying_amount = 0\r\n        log.Close(user, underlying_amt / self.underlying * self.decimals, key)\r\n    self.total_supply = 0\r\n    return True",
  "sourcePath": "C:/Users/alexa/OneDrive/Documents/Master/Blockchain/Projects/Emerald_Project/contracts/Genesis.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b14+commit.49b201c"
  },
  "networks": {
    "5777": {
      "events": {
        "0x33d8dc4a860afa0606947f2b214f16e21e7eac41e3eb6642e859d9626d002ef6": {
          "name": "Write",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "amount",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "key",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x33d8dc4a860afa0606947f2b214f16e21e7eac41e3eb6642e859d9626d002ef6"
        },
        "0x7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d": {
          "name": "Exercise",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "amount",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "key",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x7fb8af33a94ca7bd709d59757a015eb48270f350724a5409fd77b579d0b7247d"
        },
        "0x9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e0": {
          "name": "Close",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "amount",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "key",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x9d801553d397b8274b513890b6fc73f1a5edcf9ab99ee408d64b6e36889433e0"
        },
        "0x2eb828fdc16ef5c267a7b18c3f8edf180aaff1a8921c4fe994fef55ddc8abe60": {
          "name": "Mature",
          "inputs": [
            {
              "type": "address",
              "name": "contract_addr",
              "indexed": true
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x2eb828fdc16ef5c267a7b18c3f8edf180aaff1a8921c4fe994fef55ddc8abe60"
        },
        "0xf817bef87c74de34ab725f43b121c1dff5324aa363f7b9ac176b9aee5115230e": {
          "name": "Payment",
          "inputs": [
            {
              "type": "uint256",
              "name": "amount",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "address",
              "name": "source",
              "indexed": true
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xf817bef87c74de34ab725f43b121c1dff5324aa363f7b9ac176b9aee5115230e"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "name": "Transfer",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "address",
              "name": "_to",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_value",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "name": "Approval",
          "inputs": [
            {
              "type": "address",
              "name": "_owner",
              "indexed": true
            },
            {
              "type": "address",
              "name": "_spender",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_value",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
      },
      "links": {},
      "address": "0x02B7eFa0C0aB540b49bf38BCe6cab1520eD16090",
      "transactionHash": "0xe85a3805f75fad74a657794418765b6c7b600d35c579c6c1dbbe58f60341e27c"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-29T22:14:26.030Z",
  "networkType": "ethereum"
}