{
  "contractName": "Slate",
  "abi": [
    {
      "name": "Buy",
      "inputs": [
        {
          "type": "address",
          "name": "buyer",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "prm",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Write",
      "inputs": [
        {
          "type": "address",
          "name": "writer",
          "indexed": true
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Deposit",
      "inputs": [
        {
          "type": "address",
          "name": "source",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "val",
          "indexed": false,
          "unit": "wei"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "constant": false,
      "payable": true,
      "type": "fallback"
    },
    {
      "outputs": [],
      "inputs": [
        {
          "type": "address",
          "name": "_stash"
        },
        {
          "type": "address",
          "name": "_option"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "write",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_option"
        },
        {
          "type": "uint256",
          "name": "prm"
        },
        {
          "type": "uint256",
          "name": "margin"
        }
      ],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 38929
    },
    {
      "name": "purchase",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_option"
        },
        {
          "type": "uint256",
          "name": "prm"
        }
      ],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 72593
    },
    {
      "name": "withdraw",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "uint256",
          "name": "val"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 35539
    },
    {
      "name": "option",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 641
    },
    {
      "name": "wrote",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 825
    },
    {
      "name": "bought",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 855
    },
    {
      "name": "premium",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 885
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05260406104c76101403934156100a157600080fd5b60206104c760c03960c05160205181106100ba57600080fd5b50602060206104c70160c03960c05160205181106100d757600080fd5b506101405160005560006004600060e05260c052604060c020556000543b6100fe57600080fd5b600054301861010c57600080fd5b6020610200602463ae22c57d61018052306101a05261019c60006000545af161013457600080fd5b60005061020050610160516001556104af56600436101561000d5761033a565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263d52c26c860005114156101585760043560205181106100c057600080fd5b5032600260043560e05260c052604060c020556000543b6100e057600080fd5b60005430186100ee57600080fd5b60206101e060446347e7ef246101405232610160526044356101805261015c60006000545af161011d57600080fd5b6000506101e050327f3d9850d7c40f30357297906847346c1d76b7ab7b248eb505c9b940534a680e5760006000a2600160005260206000f350005b638de9322260005114156101e757600435602051811061017757600080fd5b5032600360043560e05260c052604060c0205560243560043260e05260c052604060c0205560243561014052327fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e6020610140a26001543214156101da57600080fd5b600160005260206000f350005b632e1a7d4d600051141561023d57341561020057600080fd5b6000600060006000670de0b6b3a76400006004350260023360e05260c052604060c020546000f161023057600080fd5b600160005260206000f350005b63010035af600051141561026457341561025657600080fd5b60015460005260206000f350005b63533286ec60005114156102ab57341561027d57600080fd5b600435602051811061028e57600080fd5b50600260043560e05260c052604060c0205460005260206000f350005b63667022fd60005114156102f25734156102c457600080fd5b60043560205181106102d557600080fd5b50600360043560e05260c052604060c0205460005260206000f350005b63a61e6bf1600051141561033957341561030b57600080fd5b600435602051811061031c57600080fd5b50600460043560e05260c052604060c0205460005260206000f350005b5b3461014052337fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c6020610140a25b6101476104af036101476000396101476104af036000f3",
  "deployedBytecode": "0x600436101561000d5761033a565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a05263d52c26c860005114156101585760043560205181106100c057600080fd5b5032600260043560e05260c052604060c020556000543b6100e057600080fd5b60005430186100ee57600080fd5b60206101e060446347e7ef246101405232610160526044356101805261015c60006000545af161011d57600080fd5b6000506101e050327f3d9850d7c40f30357297906847346c1d76b7ab7b248eb505c9b940534a680e5760006000a2600160005260206000f350005b638de9322260005114156101e757600435602051811061017757600080fd5b5032600360043560e05260c052604060c0205560243560043260e05260c052604060c0205560243561014052327fe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e6020610140a26001543214156101da57600080fd5b600160005260206000f350005b632e1a7d4d600051141561023d57341561020057600080fd5b6000600060006000670de0b6b3a76400006004350260023360e05260c052604060c020546000f161023057600080fd5b600160005260206000f350005b63010035af600051141561026457341561025657600080fd5b60015460005260206000f350005b63533286ec60005114156102ab57341561027d57600080fd5b600435602051811061028e57600080fd5b50600260043560e05260c052604060c0205460005260206000f350005b63667022fd60005114156102f25734156102c457600080fd5b60043560205181106102d557600080fd5b50600360043560e05260c052604060c0205460005260206000f350005b63a61e6bf1600051141561033957341561030b57600080fd5b600435602051811061031c57600080fd5b50600460043560e05260c052604060c0205460005260206000f350005b5b3461014052337fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c6020610140a2",
  "source": "# @title SLATE \r\n# \r\n# @notice Buyer and Writer Registry and Authentication\r\n# \r\n# @author Alexander Angel\r\n# \r\n# @dev SStore of users\r\n\r\ncontract Stash():\r\n    def getAddress(addr: address) -> bool:modifying\r\n    def deposit(writer: address, margin: uint256) -> bool:modifying\r\n    \r\n\r\nBuy: event({buyer: indexed(address), prm: uint256})\r\nWrite: event({writer: indexed(address)})\r\nDeposit: event({source: indexed(address), val: wei_value})\r\n\r\n# Contract Interface variables\r\nstash: Stash\r\n\r\n# User Variables\r\n\r\n# FIX\r\n# buyer: public(address) \r\n# writer: public(address)\r\n\r\noption: public(address)\r\nwrote: public(map(address, address)) # option addr, writer addr\r\nbought: public(map(address, address)) # option addr, buyer addr\r\npremium: public(map(address, uint256)) # premium paid for option\r\n\r\n@public\r\n@payable\r\ndef __default__():\r\n    log.Deposit(msg.sender, msg.value)\r\n\r\n@public\r\ndef __init__(_stash: address, _option: address):\r\n    self.stash = Stash(_stash)\r\n    self.premium[ZERO_ADDRESS] = 0\r\n    self.stash.getAddress(self) # Sends the Slate and Option address to Stash\r\n    # FIX\r\n    self.option = _option\r\n\r\n@public\r\n@payable\r\ndef write(_option: address, prm: uint256, margin: uint256) -> bool:\r\n    \"\"\"\r\n    @notice Seller writes ECO Contract, Deposits margin, Seller is authorized\r\n    \"\"\"\r\n    self.wrote[_option] = tx.origin\r\n    self.stash.deposit(tx.origin, margin)\r\n    log.Write(tx.origin)\r\n\r\n    # call external margin depost function\r\n    return True\r\n\r\n@public\r\n@payable\r\ndef purchase(_option: address, prm: uint256) -> bool:\r\n    \"\"\"\r\n    @notice Buyer purchases ECO for Premium:wei, Seller can claim Premium, Buyer is authorized\r\n    \"\"\"\r\n\r\n    self.bought[_option] = tx.origin # sets option to a buyer -> 20k gas\r\n    self.premium[tx.origin] = prm # sets buyer's deposit to premium, for writer to withdraw -> 20k gas\r\n    log.Buy(tx.origin, prm) # -> 1.4k gas\r\n    # Going to need cond to check if writer purchased to closed, or make that seperate\r\n    #if(tx.origin == self.writer):\r\n    #    return False\r\n\r\n    # FIX\r\n    assert not tx.origin == self.option\r\n\r\n    return True\r\n\r\n@public\r\ndef withdraw(val: uint256) -> bool:\r\n    send(self.wrote[msg.sender], as_wei_value(val, 'ether'))\r\n    return True",
  "sourcePath": "C:/Users/alexa/OneDrive/Documents/Master/Blockchain/Projects/Emerald_Project/contracts/v0-legacy/Slate.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b14+commit.49b201c"
  },
  "networks": {
    "5777": {
      "events": {
        "0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e": {
          "name": "Buy",
          "inputs": [
            {
              "type": "address",
              "name": "buyer",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "prm",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xe3d4187f6ca4248660cc0ac8b8056515bac4a8132be2eca31d6d0cc170722a7e"
        },
        "0x3d9850d7c40f30357297906847346c1d76b7ab7b248eb505c9b940534a680e57": {
          "name": "Write",
          "inputs": [
            {
              "type": "address",
              "name": "writer",
              "indexed": true
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x3d9850d7c40f30357297906847346c1d76b7ab7b248eb505c9b940534a680e57"
        },
        "0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c": {
          "name": "Deposit",
          "inputs": [
            {
              "type": "address",
              "name": "source",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "val",
              "indexed": false,
              "unit": "wei"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c"
        }
      },
      "links": {},
      "address": "0x9ca2D5AB94ad2898420868C4b0B20bB750B20246",
      "transactionHash": "0xdb5e82bec47b2d6eea40e6e312bb0fbef0c74e396750709247cb29fee52c4e37"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-20T20:54:47.269Z"
}