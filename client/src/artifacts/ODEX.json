{
  "contractName": "ODEX",
  "abi": [
    {
      "name": "AddToken",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "string",
          "name": "_token",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_timestamp",
          "indexed": false,
          "unit": "sec"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "TokenDeposit",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_timestamp",
          "indexed": false,
          "unit": "sec"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "TokenWithdraw",
      "inputs": [
        {
          "type": "address",
          "name": "_to",
          "indexed": true
        },
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_timestamp",
          "indexed": false,
          "unit": "sec"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "EthDeposit",
      "inputs": [
        {
          "type": "address",
          "name": "_from",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amountWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_timestamp",
          "indexed": false,
          "unit": "sec"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "EthWithdraw",
      "inputs": [
        {
          "type": "address",
          "name": "_to",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amountWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_timestamp",
          "indexed": false,
          "unit": "sec"
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "NewLimitBuyOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_who",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "NewLimitSellOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "address",
          "name": "_who",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "FulfilledBuyOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "FulfilledSellOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_amount_tokens",
          "indexed": false
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "CanceledBuyOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "CanceledSellOrder",
      "inputs": [
        {
          "type": "int128",
          "name": "_symbolIndex",
          "indexed": true
        },
        {
          "type": "uint256",
          "name": "_priceWei",
          "indexed": false,
          "unit": "wei"
        },
        {
          "type": "uint256",
          "name": "_orderKey",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "name": "Error",
      "inputs": [
        {
          "type": "string",
          "name": "err",
          "indexed": false
        }
      ],
      "anonymous": false,
      "type": "event"
    },
    {
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "depositEth",
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": true,
      "type": "function",
      "gas": 39015
    },
    {
      "name": "withdrawEth",
      "outputs": [],
      "inputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "amountWei"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 74525
    },
    {
      "name": "addToken",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "address",
          "name": "erc20_token_address"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 2605354
    },
    {
      "name": "depositToken",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "uint256",
          "name": "amount_tokens"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 1287121
    },
    {
      "name": "withdrawToken",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "uint256",
          "name": "amount_tokens"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 1287664
    },
    {
      "name": "getTokenBalance",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1210959
    },
    {
      "name": "getBuyOrderBook",
      "outputs": [
        {
          "type": "uint256[10]",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 2085074684
    },
    {
      "name": "buyToken",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "priceWei"
        },
        {
          "type": "uint256",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 277194740201
    },
    {
      "name": "sellToken",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "priceWei"
        },
        {
          "type": "uint256",
          "name": "amount"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 293570826468
    },
    {
      "name": "cancelOrder",
      "outputs": [],
      "inputs": [
        {
          "type": "string",
          "name": "symbol_name"
        },
        {
          "type": "bool",
          "name": "isSellOrder"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "priceWei"
        },
        {
          "type": "uint256",
          "name": "offer_key"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 1271107
    },
    {
      "name": "tokens__token_contract",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1338
    },
    {
      "name": "tokens__symbol",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5976
    },
    {
      "name": "tokens__buyBook__highPrice",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1591
    },
    {
      "name": "tokens__buyBook__lowPrice",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1627
    },
    {
      "name": "tokens__buyBook__offers__amount_tokens",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        },
        {
          "type": "uint256",
          "name": "arg2"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1844
    },
    {
      "name": "tokens__buyBook__offers__user",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        },
        {
          "type": "uint256",
          "name": "arg2"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1880
    },
    {
      "name": "tokens__buyBook__offers_key",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1717
    },
    {
      "name": "tokens__buyBook__offers_len",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1747
    },
    {
      "name": "tokens__current_buy_price",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1584
    },
    {
      "name": "tokens__lowest_buy_price",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1614
    },
    {
      "name": "tokens__amount_buy_prices",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1644
    },
    {
      "name": "tokens__sellBook__highPrice",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1861
    },
    {
      "name": "tokens__sellBook__lowPrice",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1897
    },
    {
      "name": "tokens__sellBook__offers__amount_tokens",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        },
        {
          "type": "uint256",
          "name": "arg2"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2114
    },
    {
      "name": "tokens__sellBook__offers__user",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        },
        {
          "type": "uint256",
          "name": "arg2"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2150
    },
    {
      "name": "tokens__sellBook__offers_key",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1987
    },
    {
      "name": "tokens__sellBook__offers_len",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        },
        {
          "type": "uint256",
          "unit": "wei",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2017
    },
    {
      "name": "tokens__current_sell_price",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1854
    },
    {
      "name": "tokens__highest_sell_price",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1884
    },
    {
      "name": "tokens__amount_sell_prices",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "int128",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1914
    },
    {
      "name": "tokenBalances",
      "outputs": [
        {
          "type": "uint256",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        },
        {
          "type": "int128",
          "name": "arg1"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 2020
    },
    {
      "name": "ethBalances",
      "outputs": [
        {
          "type": "uint256",
          "unit": "wei",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 1845
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052341561009857600080fd5b32600555670de0b6b3a7640000600655614c7156600436101561000d57614bbe565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a0526000156101b0575b6101805261014052610160526101a05260006102a0525b6101a05160206001820306601f82010390506102a0511015156100e2576100fb565b6102a0516101c001526102a0516020016102a0526100c0565b6102205260006102a0525b6102205160206001820306601f82010390506102a05110151561012857610141565b6102a05161024001526102a0516020016102a052610106565b600050610220602060c0825160208401600060025af161016057600080fd5b60c05190506101a0602060c0825160208401600060025af161018157600080fd5b60c0519050141561019f5760016000526000516101805156506101ae565b60006000526000516101805156505b005b6000156103d7575b6101605261014052610180526000610200525b6101805160206001820306601f8201039050610200511015156101ed57610206565b610200516101a0015261020051602001610200526101cb565b60005061022060006064818352015b61016051610180516101a0516101c0516101e0516102005161022051604063a49f6f9e610260528061028052600160006102205160e05260c052604060c02060c052602060c02001808060c052602060c0208361028001602082540161012060006003818352015b82610120516020021115610290576102b2565b61012051850154610120516020028501525b815160010180835281141561027d575b5050505050508060c052602060c02054820160206001820306601f8201039050602001915050806102a052610180808051602001808461028001828460006004600a8704601201f161030357600080fd5b50508051820160206001820306601f8201039050602001915050506102a051806102800180518060206001820306601f820103905082016103c0525050505b6102c06103c051101561035457610369565b6103c0515160206103c051036103c052610342565b6102a05161028051600658016100a9565b6103e05261022052610200526101e0526101c0526101a05261018052610160526103e051156103b457610220516000526000516101605156505b5b8151600101808352811415610215575b50506000600052600051610160515650005b60001561054b575b6101605261014052610180526000610200525b6101805160206001820306601f8201039050610200511015156104145761042d565b610200516101a0015261020051602001610200526103f2565b60005061016051610180516101a0516101c0516101e051610200516102205160206367fee8b4610260528061028052610180808051602001808461028001828460006004600a8704601201f161048257600080fd5b50508051820160206001820306601f82010390506020019150505061028051806102800180518060206001820306601f82010390508201610340525050505b6102a06103405110156104d3576104e8565b610340515160206103405103610340526104c1565b61028051600658016101b8565b6103605261022052610200526101e0526101c0526101a0526101805261016052610360516102205261022051151561053a576000600052600051610160515650610549565b60016000526000516101605156505b005b63439370b160005114156105f75760043360e05260c052604060c0205460043360e05260c052604060c020543481818301101561058757600080fd5b80820190509050101561059957600080fd5b60043360e05260c052604060c0208054348181830110156105b957600080fd5b8082019050905081555034610140524261016052337ffae570aafc29f1091fc10459d8172aecaed5f12a411cfc1869bbd72357865c1e6040610140a2005b63c311d04960005114156106fb57341561061057600080fd5b600060043360e05260c052604060c020546004358082101561063157600080fd5b80820390509050101561064357600080fd5b60043360e05260c052604060c0205460043360e05260c052604060c020546004358082101561067157600080fd5b80820390509050111561068357600080fd5b60043360e05260c052604060c0208054600435808210156106a357600080fd5b808203905090508155506000600060006000600435336000f16106c557600080fd5b600435610140524261016052337ff0b4c3c0bbcf3162f0aba94599d7c7f306972ad91759d1824adf34882d5511756040610140a2005b63b0b22c2c60005114156109a957341561071457600080fd5b606060043560040161014037604060043560040135111561073457600080fd5b602435602051811061074557600080fd5b50600554331461075457600080fd5b6101405161016051610180516101a0516020632c4581606101e0528061020052610140808051602001808461020001828460006004600a8704601201f161079a57600080fd5b50508051820160206001820306601f82010390506020019150505061020051806102000180518060206001820306601f820103905082016102c0525050505b6102206102c05110156107eb57610800565b6102c0515160206102c051036102c0526107d9565b61020051600658016103df565b6102e0526101a0526101805261016052610140526102e0511561082f57600080fd5b6001805460016060518183018060405190131561084b57600080fd5b809190121561085957600080fd5b90509050815550610140806001600060015460e05260c052604060c02060c052602060c0200160c052602060c020602082510161012060006003818352015b826101205160200211156108ab576108cd565b61012051602002850151610120518501555b8151600101808352811415610898575b505050505050602435600060015460e05260c052604060c02060c052602060c02055426103605260406103005261030051610340526101408051602001806103005161034001828460006004600a8704601201f161092a57600080fd5b505061030051610340015180602061030051610340010101818260206001820306601f8201039050033682375050602061030051610340015160206001820306601f8201039050610300510101610300526001547f32dc7784c530b21120f04aa0b66b7710c5b628f0526c58ffae71d67c2d5da11d61030051610340a2005b6333ad57e46000511415610bd65734156109c257600080fd5b60606004356004016101403760406004356004013511156109e257600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1610a2c57600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e0511015610a7d57610a92565b6102e0515160206102e051036102e052610a6b565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c052600060006101c05160e05260c052604060c02060c052602060c0205418610ae557600080fd5b60006101c05160e05260c052604060c02060c052602060c020546002556002543b610b0f57600080fd5b6002543018610b1d57600080fd5b60206103e060646323b872dd61032052336103405230610360526024356103805261033c60006002545af1610b5157600080fd5b6000506103e051610b6157600080fd5b60033360e05260c052604060c0206101c05160e05260c052604060c0208054602435818183011015610b9257600080fd5b808201905090508155506024356104005242610420526101c051337f3f6f4156ea86675308acc9eee72173d12b5d1a1aae53ba069f6182f81e8a45ac6040610400a3005b63c97a413a6000511415610e28573415610bef57600080fd5b6060600435600401610140376040600435600401351115610c0f57600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1610c5957600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e0511015610caa57610cbf565b6102e0515160206102e051036102e052610c98565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c052600060006101c05160e05260c052604060c02060c052602060c0205418610d1257600080fd5b60006101c05160e05260c052604060c02060c052602060c0205460025560243560033360e05260c052604060c0206101c05160e05260c052604060c020541015610d5b57600080fd5b60033360e05260c052604060c0206101c05160e05260c052604060c020805460243580821015610d8a57600080fd5b808203905090508155506002543b610da157600080fd5b6002543018610daf57600080fd5b60206103c0604463a9059cbb6103205233610340526024356103605261033c60006002545af1610dde57600080fd5b6000506103c051610dee57600080fd5b6024356103e05242610400526101c051337f9c557f9de3b8d172d17101c47b74defac8abdb902220095163e96c45a192abdf60406103e0a3005b63025abd586000511415610f67573415610e4157600080fd5b6060600435600401610140376040600435600401351115610e6157600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1610eab57600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e0511015610efc57610f11565b6102e0515160206102e051036102e052610eea565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c05260033360e05260c052604060c0206101c05160e05260c052604060c0205460005260206000f350005b6303bc4a2760005114156113f2573415610f8057600080fd5b6060600435600401610140376040600435600401351115610fa057600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1610fea57600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e051101561103b57611050565b6102e0515160206102e051036102e052611029565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c052600460006101c05160e05260c052604060c02060c052602060c0200154610320526000610340526000600360006101c05160e05260c052604060c02060c052602060c020015411156113315761036060006103ff818352015b600360006101c05160e05260c052604060c02060c052602060c02001546103205111156111025761132e565b6103205161034051600a811061111757600080fd5b600760c052602060c020015560006103805260006103a0526003600260006101c05160e05260c052604060c02060c052602060c020016103205160e05260c052604060c02060c052602060c02001546103a0526103c060006103ff818352015b6004600260006101c05160e05260c052604060c02060c052602060c020016103205160e05260c052604060c02060c052602060c02001546103a05111156111bd5761125a565b61038080516002600260006101c05160e05260c052604060c02060c052602060c020016103205160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c0205481818301101561121f57600080fd5b808201905090508152506103a08051600181818301101561123f57600080fd5b808201905090508152505b8151600101808352811415611177575b50506103805161034051600a811061127157600080fd5b600860c052602060c0200155600260006101c05160e05260c052604060c02060c052602060c020016103205160e05260c052604060c02060c052602060c020546103205114156112c45761132e566112fd565b600260006101c05160e05260c052604060c02060c052602060c020016103205160e05260c052604060c02060c052602060c02054610320525b6103408051600181818301101561131357600080fd5b808201905090508152505b81516001018083528114156110d6575b50505b61040060078060c052602060c02054825260018160c052602060c0200154826020015260028160c052602060c0200154826040015260038160c052602060c0200154826060015260048160c052602060c0200154826080015260058160c052602060c02001548260a0015260068160c052602060c02001548260c0015260078160c052602060c02001548260e0015260088160c052602060c020015482610100015260098160c052602060c02001548261012001525050610140610400f350005b600015611a79575b6101c0526101405261016052610180526101a0526004600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020018054600181818301101561145757600080fd5b808201905090508155506002600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020016004600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020015460e05260c052604060c02060c052602060c0206101805181556101a05160018201555060016004600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02001541415611a735760016003600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155600560006101405160e05260c052604060c02060c052602060c020018054600181818301101561159857600080fd5b80820190509050815550600360006101405160e05260c052604060c02060c052602060c02001546101e052600460006101405160e05260c052604060c02060c052602060c0200154610200526101605161020051116102005115171561176c576101e05115156116995761016051600360006101405160e05260c052604060c02060c052602060c020015561016051600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0205560006001600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155611746565b610160516001600260006101405160e05260c052604060c02060c052602060c020016102005160e05260c052604060c02060c052602060c020015561020051600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0205560006001600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02001555b61016051600460006101405160e05260c052604060c02060c052602060c0200155611a72565b610160516101e051101561184b5761016051600260006101405160e05260c052604060c02060c052602060c020016101e05160e05260c052604060c02060c052602060c0205561016051600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020556101e0516001600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020015561016051600360006101405160e05260c052604060c02060c052602060c0200155611a71565b600360006101405160e05260c052604060c02060c052602060c02001546102205260006102405261026060006103ff818352015b61016051600260006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c02054116101605161022051101615611a1457610220516001600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155600260006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c02054600260006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02055610160516001600260006101405160e05260c052604060c02060c052602060c02001600260006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c0205460e05260c052604060c02060c052602060c020015561016051600260006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c020556001610240525b6001600260006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c0200154610220526102405115611a5d57611a6e565b5b815160010180835281141561187f575b50505b5b5b6101c051565b600015611c36575b610200526101405261016052610180526101a0526101c0526101e0526102205260006102a0525b6102205160206001820306601f82010390506102a051101515611aca57611ae3565b6102a05161024001526102a0516020016102a052611aa8565b6000506101e0516102c05260046101405160e05260c052604060c02080546102c05180821015611b1257600080fd5b808203905090508155506101406102e0525b6102e0515160206102e051016102e0526102e06102e0511015611b4657611b24565b637b8ce0f96103005261018051610320526101a051610340526101c05161036052610140516103805261038051610360516103405161032051600658016113fa565b6102c06102e0525b6102e0515260206102e051036102e0526101406102e051101515611bb357611b90565b6000506101c0516103e0526101a051610400526004600260006101805160e05260c052604060c02060c052602060c020016101a05160e05260c052604060c02060c052602060c02001546104205261014051610180517feb182739819e1aad997521110d9ac93d34b92530a2194372f3c72728cc9db49260606103e0a361020051565b635ab8ea336000511415612866573415611c4f57600080fd5b6060600435600401610140376040600435600401351115611c6f57600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1611cb957600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e0511015611d0a57611d1f565b6102e0515160206102e051036102e052611cf8565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c05260006103205260443561034052602435600960006101c05160e05260c052604060c02060c052602060c020015411600960006101c05160e05260c052604060c02060c052602060c0200154151715611edc576101406106a0525b6106a0515160206106a051016106a0526103606106a0511015611dc857611da6565b60c063a7e407906106c052336106e052806107005261014080805160200180846106e001828460006004600a8704601201f1611e0357600080fd5b50508051820160206001820306601f82010390506020019150506101c0516107205260243561074052610340516107605261032051610780525061070051806106e00180518060206001820306601f82010390508201610840525050505b6107a0610840511015611e7357611e88565b61084051516020610840510361084052611e61565b61078051610760516107405161072051610700516106e05160065801611a81565b6103406106a0525b6106a0515260206106a051036106a0526101406106a051101515611ed457611eb1565b600050612864565b600061036052600760006101c05160e05260c052604060c02060c052602060c02001546103805260006103a0526103c060006103ff818352015b610340511560243561038051111715611f2e5761271b565b6003600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a0526103e060006103ff818352015b61034051156004600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a051111715611fc2576126e7565b6002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c0205461040052610340516104005111151561226b576104005161038051808202821582848304141761203f57600080fd5b80905090509050600654808061205457600080fd5b820490509050610360526103605160043360e05260c052604060c02054101561207c57600080fd5b60043360e05260c052604060c0208054610360518082101561209d57600080fd5b8082039050905081555060033360e05260c052604060c0206101c05160e05260c052604060c0208054610400518181830110156120d957600080fd5b8082019050905081555060006002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c02055600460016002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c020015460e05260c052604060c0208054610360518181830110156121a657600080fd5b808201905090508155506003600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001805460018181830110156121f957600080fd5b808201905090508155506104005161048052610380516104a0526103a0516104c0526101c0517f81ec17c1f7f8fa70de3ea8434f4366235c65e78f89dcc6dd019d2395199f151c6060610480a26103408051610400518082101561225c57600080fd5b8082039050905081525061249a565b610340516002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c02054116122c757600080fd5b610340516103805180820282158284830414176122e357600080fd5b8090509050905060065480806122f857600080fd5b8204905090506103205260043360e05260c052604060c0208054610320518082101561232357600080fd5b808203905090508155506002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c0208054610340518082101561238d57600080fd5b80820390509050815550600460016002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c020015460e05260c052604060c02080546103205181818301101561240a57600080fd5b8082019050905081555060033360e05260c052604060c0206101c05160e05260c052604060c02080546103405181818301101561244657600080fd5b80820190509050815550600061034052610340516104205261038051610440526103a051610460526101c0517f81ec17c1f7f8fa70de3ea8434f4366235c65e78f89dcc6dd019d2395199f151c6060610420a25b6002600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c02054156004600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a0511416156126b657600960006101c05160e05260c052604060c02060c052602060c02001805460018082101561255857600080fd5b80820390509050815550600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c0205415600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02054610380511417156125fa576000600760006101c05160e05260c052604060c02060c052602060c02001556126b5565b600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02054600760006101c05160e05260c052604060c02060c052602060c020015560006001600660006101c05160e05260c052604060c02060c052602060c02001600660006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c0205460e05260c052604060c02060c052602060c02001555b5b6103a0805160018181830110156126cc57600080fd5b808201905090508152505b8151600101808352811415611f76575b5050600760006101c05160e05260c052604060c02060c052602060c0200154610380525b8151600101808352811415611f16575b50506000610340511115612863576101406104e0525b6104e0515160206104e051016104e0526103c06104e051101561275357612731565b60c063a7e407906105005233610520528061054052610140808051602001808461052001828460006004600a8704601201f161278e57600080fd5b50508051820160206001820306601f82010390506020019150506101c0516105605260243561058052610340516105a052610320516105c0525061054051806105200180518060206001820306601f82010390508201610680525050505b6105e06106805110156127fe57612813565b610680515160206106805103610680526127ec565b6105c0516105a0516105805161056051610540516105205160065801611a81565b6103a06104e0525b6104e0515260206104e051036104e0526101406104e05110151561285f5761283c565b6000505b5b005b600015612ee6575b6101c0526101405261016052610180526101a0526004600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02001805460018181830110156128cb57600080fd5b808201905090508155506002600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020016004600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020015460e05260c052604060c02060c052602060c0206101805181556101a05160018201555060016004600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02001541415612ee05760016003600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155600960006101405160e05260c052604060c02060c052602060c0200180546001818183011015612a0c57600080fd5b80820190509050815550600760006101405160e05260c052604060c02060c052602060c02001546101e052600860006101405160e05260c052604060c02060c052602060c02001546102005261016051610200511061020051151715612bdb576101e0511515612b0b5761016051600760006101405160e05260c052604060c02060c052602060c02001556000600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0205560006001600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155612bb5565b61016051600660006101405160e05260c052604060c02060c052602060c020016102005160e05260c052604060c02060c052602060c02055610200516001600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02001556000600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020555b61016051600860006101405160e05260c052604060c02060c052602060c0200155612edf565b610160516101e0511115612cbb57610160516001600660006101405160e05260c052604060c02060c052602060c020016101e05160e05260c052604060c02060c052602060c02001556101e051600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0205560006001600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c020015561016051600760006101405160e05260c052604060c02060c052602060c0200155612ede565b600760006101405160e05260c052604060c02060c052602060c02001546102205260006102405261026060006103ff818352015b61016051600660006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c02054116101605161022051101615612e8457610220516001600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c0200155600660006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c02054600660006101405160e05260c052604060c02060c052602060c020016101605160e05260c052604060c02060c052602060c02055610160516001600660006101405160e05260c052604060c02060c052602060c02001600660006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c0205460e05260c052604060c02060c052602060c020015561016051600660006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c020556001610240525b600660006101405160e05260c052604060c02060c052602060c020016102205160e05260c052604060c02060c052602060c02054610220526102405115612eca57612edb565b5b8151600101808352811415612cef575b50505b5b5b6101c051565b6000156130b2575b610200526101405261016052610180526101a0526101c0526101e0526102205260006102a0525b6102205160206001820306601f82010390506102a051101515612f3757612f50565b6102a05161024001526102a0516020016102a052612f15565b6000506101e0516102c05260036101405160e05260c052604060c0206101805160e05260c052604060c02080546101c05180821015612f8e57600080fd5b808203905090508155506101406102e0525b6102e0515160206102e051016102e0526102e06102e0511015612fc257612fa0565b63ea6a33846103005261018051610320526101a051610340526101c051610360526101405161038052610380516103605161034051610320516006580161286e565b6102c06102e0525b6102e0515260206102e051036102e0526101406102e05110151561302f5761300c565b6000506101c0516103e0526101a051610400526004600660006101805160e05260c052604060c02060c052602060c020016101a05160e05260c052604060c02060c052602060c02001546104205261014051610180517fc255d0519a8b9d5b71d1f7a19adfe4d20a3572367149e3403f9dd25bb3ee51a160606103e0a361020051565b63851030fe6000511415613cea5734156130cb57600080fd5b60606004356004016101403760406004356004013511156130eb57600080fd5b6101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f161313557600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e05110156131865761319b565b6102e0515160206102e051036102e052613174565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c05260006103205260443561034052602435600360006101c05160e05260c052604060c02060c052602060c020015410600560006101c05160e05260c052604060c02060c052602060c0200154151715613358576101406106a0525b6106a0515160206106a051016106a0526103606106a051101561324457613222565b60c06330b01b476106c052336106e052806107005261014080805160200180846106e001828460006004600a8704601201f161327f57600080fd5b50508051820160206001820306601f82010390506020019150506101c0516107205260243561074052610340516107605261032051610780525061070051806106e00180518060206001820306601f82010390508201610840525050505b6107a06108405110156132ef57613304565b610840515160206108405103610840526132dd565b61078051610760516107405161072051610700516106e05160065801612eee565b6103406106a0525b6106a0515260206106a051036106a0526101406106a0511015156133505761332d565b600050613ce8565b600061036052600360006101c05160e05260c052604060c02060c052602060c02001546103805260006103a0526103c060006103ff818352015b6103405115602435610380511017156133aa57613b9f565b6003600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a0526103e060006103ff818352015b61034051156004600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a0511015171561343f57613b6b565b6002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c0205461040052610340516104005111151561370657610400516103805180820282158284830414176134bc57600080fd5b8090509050905060065480806134d157600080fd5b820490509050610360526104005160033360e05260c052604060c0206101c05160e05260c052604060c02054101561350857600080fd5b60033360e05260c052604060c0206101c05160e05260c052604060c0208054610400518082101561353857600080fd5b80820390509050815550600360016002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c020015460e05260c052604060c0206101c05160e05260c052604060c0208054610400518181830110156135c457600080fd5b8082019050905081555060006002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c0205560043360e05260c052604060c02080546103605181818301101561364157600080fd5b808201905090508155506003600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020018054600181818301101561369457600080fd5b808201905090508155506104005161048052610380516104a0526103a0516104c0526101c0517f593f3dfb48b44193d3934afaf8488765c812553b844ec0e7f595b28ea162d8e96060610480a2610340805161040051808210156136f757600080fd5b808203905090508152506138fa565b61034051610400511161371857600080fd5b6103405161038051808202821582848304141761373457600080fd5b80905090509050600654808061374957600080fd5b8204905090506103205260033360e05260c052604060c0206101c05160e05260c052604060c0208054610340518082101561378357600080fd5b808203905090508155506002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c020805461034051808210156137ed57600080fd5b8082039050905081555060043360e05260c052604060c02080546103205181818301101561381a57600080fd5b80820190509050815550600360016002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c020015460e05260c052604060c0206101c05160e05260c052604060c0208054610340518181830110156138a657600080fd5b80820190509050815550610340516104205261038051610440526103a051610460526101c0517f593f3dfb48b44193d3934afaf8488765c812553b844ec0e7f595b28ea162d8e96060610420a26000610340525b6002600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020016103a05160e05260c052604060c02060c052602060c02054156004600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c02001546103a051141615613b3a57600560006101c05160e05260c052604060c02060c052602060c0200180546001808210156139b857600080fd5b808203905090508155506001600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c0200154156001600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020015461038051141715613a60576000600360006101c05160e05260c052604060c02060c052602060c0200155613b39565b6001600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c0200154600360006101c05160e05260c052604060c02060c052602060c0200155600360006101c05160e05260c052604060c02060c052602060c0200154600260006101c05160e05260c052604060c02060c052602060c020016001600260006101c05160e05260c052604060c02060c052602060c020016103805160e05260c052604060c02060c052602060c020015460e05260c052604060c02060c052602060c020555b5b6103a080516001818183011015613b5057600080fd5b808201905090508152505b81516001018083528114156133f2575b5050600360006101c05160e05260c052604060c02060c052602060c0200154610380525b8151600101808352811415613392575b50506000610340511115613ce7576101406104e0525b6104e0515160206104e051016104e0526103c06104e0511015613bd757613bb5565b60c06330b01b476105005233610520528061054052610140808051602001808461052001828460006004600a8704601201f1613c1257600080fd5b50508051820160206001820306601f82010390506020019150506101c0516105605260243561058052610340516105a052610320516105c0525061054051806105200180518060206001820306601f82010390508201610680525050505b6105e0610680511015613c8257613c97565b61068051516020610680510361068052613c70565b6105c0516105a0516105805161056051610540516105205160065801612eee565b6103a06104e0525b6104e0515260206104e051036104e0526101406104e051101515613ce357613cc0565b6000505b5b005b63d1a3b025600051141561410a573415613d0357600080fd5b6060600435600401610140376040600435600401351115613d2357600080fd5b60243560028110613d3357600080fd5b506101405161016051610180516101a0516101c05160206367fee8b4610200528061022052610140808051602001808461022001828460006004600a8704601201f1613d7e57600080fd5b50508051820160206001820306601f82010390506020019150505061022051806102200180518060206001820306601f820103905082016102e0525050505b6102406102e0511015613dcf57613de4565b6102e0515160206102e051036102e052613dbd565b61022051600658016101b8565b610300526101c0526101a052610180526101605261014052610300516101c05260243515613f8b573360016002600660006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c020015414613e7357600080fd5b6002600660006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c020546103805260033360e05260c052604060c0206101c05160e05260c052604060c020805461038051818183011015613ef557600080fd5b8082019050905081555060006002600660006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c020556044356103a0526064356103c0526101c0517f787aae6fd249d02d1649323c99f3150e35200f1bd28c2935cd371efe50280f1e60406103a0a2614108565b3360016002600660006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c020015414613fe557600080fd5b6002600260006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c02054604435808202821582848304141761404857600080fd5b809050905090506103205260043360e05260c052604060c02080546103205181818301101561407657600080fd5b8082019050905081555060006002600260006101c05160e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0200160643560e05260c052604060c02060c052602060c0205560443561034052606435610360526101c0517f827d29feae27a23402c8c3a43ff6acb6540baf1148067917399e4e6667c8e2246040610340a25b005b632ca53260600051141561416c57341561412357600080fd5b6060516004358060405190131561413957600080fd5b809190121561414757600080fd5b50600060043560e05260c052604060c02060c052602060c0205460005260206000f350005b6373643fb7600051141561425e57341561418557600080fd5b6060516004358060405190131561419b57600080fd5b80919012156141a957600080fd5b506001600060043560e05260c052604060c02060c052602060c020018060c052602060c020610180602082540161012060006003818352015b826101205160200211156141f557614217565b61012051850154610120516020028501525b81516001018083528114156141e2575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6350b2acd860005114156142d957341561427757600080fd5b6060516004358060405190131561428d57600080fd5b809190121561429b57600080fd5b506002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0205460005260206000f350005b63ead99e6a60005114156143575734156142f257600080fd5b6060516004358060405190131561430857600080fd5b809190121561431657600080fd5b5060016002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b63a485a66f60005114156143eb57341561437057600080fd5b6060516004358060405190131561438657600080fd5b809190121561439457600080fd5b5060026002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0205460005260206000f350005b63156f7508600051141561448257341561440457600080fd5b6060516004358060405190131561441a57600080fd5b809190121561442857600080fd5b50600160026002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c020015460005260206000f350005b639a05d21a600051141561450057341561449b57600080fd5b606051600435806040519013156144b157600080fd5b80919012156144bf57600080fd5b5060036002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b6380ceeea5600051141561457e57341561451957600080fd5b6060516004358060405190131561452f57600080fd5b809190121561453d57600080fd5b5060046002600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b639ca2181b60005114156145e357341561459757600080fd5b606051600435806040519013156145ad57600080fd5b80919012156145bb57600080fd5b506003600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b6329d3942c60005114156146485734156145fc57600080fd5b6060516004358060405190131561461257600080fd5b809190121561462057600080fd5b506004600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b631ae1014260005114156146ad57341561466157600080fd5b6060516004358060405190131561467757600080fd5b809190121561468557600080fd5b506005600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b63c714371660005114156147285734156146c657600080fd5b606051600435806040519013156146dc57600080fd5b80919012156146ea57600080fd5b506006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0205460005260206000f350005b6395628aa360005114156147a657341561474157600080fd5b6060516004358060405190131561475757600080fd5b809190121561476557600080fd5b5060016006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b636069cf6c600051141561483a5734156147bf57600080fd5b606051600435806040519013156147d557600080fd5b80919012156147e357600080fd5b5060026006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c0205460005260206000f350005b63f44c170260005114156148d157341561485357600080fd5b6060516004358060405190131561486957600080fd5b809190121561487757600080fd5b50600160026006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c0200160443560e05260c052604060c02060c052602060c020015460005260206000f350005b63cd2cbc19600051141561494f5734156148ea57600080fd5b6060516004358060405190131561490057600080fd5b809190121561490e57600080fd5b5060036006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b6352e16a2360005114156149cd57341561496857600080fd5b6060516004358060405190131561497e57600080fd5b809190121561498c57600080fd5b5060046006600060043560e05260c052604060c02060c052602060c0200160243560e05260c052604060c02060c052602060c020015460005260206000f350005b632b56f13d6000511415614a325734156149e657600080fd5b606051600435806040519013156149fc57600080fd5b8091901215614a0a57600080fd5b506007600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b63db67917f6000511415614a97573415614a4b57600080fd5b60605160043580604051901315614a6157600080fd5b8091901215614a6f57600080fd5b506008600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b638ad468746000511415614afc573415614ab057600080fd5b60605160043580604051901315614ac657600080fd5b8091901215614ad457600080fd5b506009600060043560e05260c052604060c02060c052602060c020015460005260206000f350005b6339e06cdd6000511415614b76573415614b1557600080fd5b6004356020518110614b2657600080fd5b5060605160243580604051901315614b3d57600080fd5b8091901215614b4b57600080fd5b50600360043560e05260c052604060c02060243560e05260c052604060c0205460005260206000f350005b633cfba0e36000511415614bbd573415614b8f57600080fd5b6004356020518110614ba057600080fd5b50600460043560e05260c052604060c0205460005260206000f350005b5b60006000fd5b6100ad614c71036100ad6000396100ad614c71036000f3",
  "deployedBytecode": "",
  "source": "# @title A Decentralized Exchange for MOAT Tokens\r\n# \r\n# @notice Implementation of a fulfilling orderbook with bid/ask\r\n# \r\n# @author Alexander Angel, \r\n#         Luke Schoen's Solidity Dex: https://github.com/ltfschoen/dex/blob/master/contracts/Exchange.sol\r\n# \r\n# @dev \r\n#\r\n# @version 0.1.0b14\r\n\r\n# Books\r\nstruct Offer:\r\n    amount_tokens: uint256\r\n    user: address\r\n\r\nstruct OrderBook:\r\n    highPrice: wei_value\r\n    lowPrice: wei_value\r\n    offers: map(uint256, Offer)\r\n    offers_key: uint256\r\n    offers_len: uint256\r\n\r\nstruct Token:\r\n    token_contract: address\r\n    symbol: string[64]\r\n    buyBook: map(wei_value, OrderBook)\r\n    current_buy_price: wei_value\r\n    lowest_buy_price: wei_value\r\n    amount_buy_prices: uint256\r\n    sellBook: map(wei_value, OrderBook)\r\n    current_sell_price: wei_value\r\n    highest_sell_price: wei_value\r\n    amount_sell_prices: uint256\r\n\r\n\r\n# EIP-20 Interface\r\ncontract Erc20():\r\n    def totalSupply() -> uint256:constant\r\n    def balanceOf(_owner: address) -> uint256:constant\r\n    def allowance(_owner: address, _spender: address) -> uint256:constant\r\n    def transfer(_to: address, _value: uint256) -> bool:modifying\r\n    def transferFrom(_from: address, _to: address, _value: uint256) -> bool:modifying\r\n    def approve(_spender: address, _value: uint256) -> bool:modifying\r\n\r\n\r\n# Events\r\n\r\n# Tokens\r\nAddToken: event({_symbolIndex: indexed(int128), _token: string[64], _timestamp: timestamp})\r\nTokenDeposit: event({_from: indexed(address), _symbolIndex: indexed(int128), _amount_tokens: uint256, _timestamp: timestamp})\r\nTokenWithdraw: event({_to: indexed(address), _symbolIndex: indexed(int128), _amount_tokens: uint256, _timestamp: timestamp})\r\n\r\n# Ether\r\nEthDeposit: event({_from: indexed(address), _amountWei: wei_value, _timestamp: timestamp})\r\nEthWithdraw: event({_to: indexed(address), _amountWei: wei_value, _timestamp: timestamp})\r\n\r\n# New Buy/Sell Order\r\nNewLimitBuyOrder: event({_symbolIndex: indexed(int128), _who: indexed(address), _amount_tokens: uint256, _priceWei: wei_value, _orderKey: uint256})\r\nNewLimitSellOrder: event({_symbolIndex: indexed(int128), _who: indexed(address), _amount_tokens: uint256, _priceWei: wei_value, _orderKey: uint256})\r\n\r\n# Fulfillment of Order\r\nFulfilledBuyOrder: event({_symbolIndex: indexed(int128), _amount_tokens: uint256, _priceWei: wei_value, _orderKey: uint256})\r\nFulfilledSellOrder: event({_symbolIndex: indexed(int128), _amount_tokens: uint256, _priceWei: wei_value, _orderKey: uint256})\r\n\r\n# Cancellation\r\nCanceledBuyOrder: event({_symbolIndex: indexed(int128), _priceWei: wei_value, _orderKey: uint256})\r\nCanceledSellOrder: event({_symbolIndex: indexed(int128), _priceWei: wei_value, _orderKey: uint256})\r\n\r\n# Debug Logger\r\nError: event({err: string[64]})\r\n\r\n# Token Indexing and Identification\r\ntokens: public(map(int128, Token))\r\nsymbol_index: int128\r\n\r\n# Token ERC-20\r\ntoken: Erc20\r\n\r\n# Balance Tracker\r\ntokenBalances: public(map(address, map(int128, uint256))) # Maps an address to a map of token ID and amount of tokens\r\nethBalances: public(map(address, wei_value))\r\n\r\n# Ownership\r\nadmin: address\r\n\r\n# Other\r\ndecimals: uint256\r\nlistBuyPrices: wei_value[10]\r\nlistBuyVolume: uint256[10]\r\n\r\nMAX_ORDERS: constant(uint256) = 2**10 - 1\r\n\r\n# Initialize\r\n@public\r\ndef __init__():\r\n    self.admin = tx.origin\r\n    self.decimals = 10**18\r\n\r\n\r\n# Utility\r\n@private\r\n@constant\r\ndef stringEquality(_a: string[64], _b: string[64]) -> bool:\r\n    if(sha256(_a) == sha256(_b)):\r\n        return True\r\n    else:\r\n        return False\r\n\r\n\r\n@private\r\n@constant\r\ndef getSymbolIndex(symbol_name: string[64]) -> int128:\r\n    \"\"\"\r\n    @notice - Gets symbol index\r\n    @param - String of Symbol to get index of\r\n    @return - Returns index or 0 if not indexed\r\n    \"\"\"\r\n    for x in range(100):\r\n        if(self.stringEquality(self.tokens[x].symbol, symbol_name)):\r\n            return x\r\n    return 0\r\n\r\n@private\r\n@constant\r\ndef exchangeHasToken(symbol_name: string[64]) -> bool:\r\n    \"\"\"\r\n    @notice - Checks exchange to see if it has token\r\n    @param - String of symbol\r\n    \"\"\"\r\n    index: int128 = self.getSymbolIndex(symbol_name)\r\n    if(index == 0):\r\n        return False\r\n    else:\r\n        return True\r\n\r\n\r\n\r\n# Deposit and Withdraw Ether\r\n@public\r\n@payable\r\ndef depositEth():\r\n    \"\"\"\r\n    @notice - User can deposit Ether into Dex to trade with\r\n    \"\"\"\r\n    assert self.ethBalances[msg.sender] + msg.value >= self.ethBalances[msg.sender]\r\n    self.ethBalances[msg.sender] += msg.value\r\n    log.EthDeposit(msg.sender, msg.value, block.timestamp)\r\n\r\n\r\n@public\r\ndef withdrawEth(amountWei: wei_value):\r\n    \"\"\"\r\n    @notice - User can freely withdraw from Dex\r\n    \"\"\"\r\n    assert self.ethBalances[msg.sender] - amountWei >= 0\r\n    assert self.ethBalances[msg.sender] - amountWei <= self.ethBalances[msg.sender]\r\n    self.ethBalances[msg.sender] -= amountWei\r\n    send(msg.sender, amountWei)\r\n    log.EthWithdraw(msg.sender, amountWei, block.timestamp)\r\n\r\n\r\n# Manage tokens traded on exchange\r\n@public\r\ndef addToken(symbol_name: string[64], erc20_token_address: address):\r\n    \"\"\"\r\n    @notice - Adds a new token to the exchange\r\n    \"\"\"\r\n    assert msg.sender == self.admin\r\n    assert not self.exchangeHasToken(symbol_name) # Check the list of tokens\r\n    self.symbol_index += 1\r\n    self.tokens[self.symbol_index].symbol = symbol_name\r\n    self.tokens[self.symbol_index].token_contract = erc20_token_address\r\n    log.AddToken(self.symbol_index, symbol_name, block.timestamp)\r\n\r\n\r\n# Deposit and Withdraw Tokens\r\n@public\r\ndef depositToken(symbol_name: string[64], amount_tokens: uint256):\r\n    \"\"\"\r\n    @notice - Deposits Token into DEX\r\n    \"\"\"\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n    assert self.tokens[_symbolIndex].token_contract != ZERO_ADDRESS # Checks the Token has been initialized\r\n    self.token = Erc20(self.tokens[_symbolIndex].token_contract) # Sets Interface for token\r\n    assert_modifiable(self.token.transferFrom(msg.sender, self, amount_tokens)) # Asserts transfer successful\r\n    self.tokenBalances[msg.sender][_symbolIndex] += amount_tokens # Updates balance\r\n    log.TokenDeposit(msg.sender, _symbolIndex, amount_tokens, block.timestamp)\r\n\r\n\r\n@public\r\ndef withdrawToken(symbol_name: string[64], amount_tokens: uint256):\r\n    \"\"\"\r\n    @notice - Withdraws Token into DEX\r\n    \"\"\"\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n    assert self.tokens[_symbolIndex].token_contract != ZERO_ADDRESS # Checks the Token has been initialized\r\n    self.token = Erc20(self.tokens[_symbolIndex].token_contract) # Sets Interface for token\r\n    assert self.tokenBalances[msg.sender][_symbolIndex] >= amount_tokens # Checks Bal >= withdraw\r\n    self.tokenBalances[msg.sender][_symbolIndex] -= amount_tokens # Updates Balance\r\n    assert_modifiable(self.token.transfer(msg.sender, amount_tokens)) # Asserts transfer successful\r\n    log.TokenWithdraw(msg.sender, _symbolIndex, amount_tokens, block.timestamp)\r\n\r\n\r\n@public\r\n@constant\r\ndef getTokenBalance(symbol_name: string[64]) -> uint256:\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name)\r\n    return self.tokenBalances[msg.sender][_symbolIndex]\r\n\r\n\r\n# Order Book - BID Orders\r\n@public\r\ndef getBuyOrderBook(symbol_name: string[64]) -> wei_value[10]:\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n    whilePrice: wei_value = self.tokens[_symbolIndex].lowest_buy_price\r\n    counter: uint256 = 0\r\n    if(self.tokens[_symbolIndex].current_buy_price > as_wei_value(0, 'ether')):\r\n        for x in range(MAX_ORDERS):\r\n            if(whilePrice > self.tokens[_symbolIndex].current_buy_price):\r\n                break\r\n            self.listBuyPrices[counter] = whilePrice\r\n            buyVolumeAtPrice: uint256 = 0\r\n            buyOffersKey: uint256 = 0\r\n            buyOffersKey = self.tokens[_symbolIndex].buyBook[whilePrice].offers_key\r\n            for i in range(MAX_ORDERS):\r\n                if(buyOffersKey > self.tokens[_symbolIndex].buyBook[whilePrice].offers_len):\r\n                    break\r\n                buyVolumeAtPrice += self.tokens[_symbolIndex].buyBook[whilePrice].offers[buyOffersKey].amount_tokens\r\n                buyOffersKey += 1\r\n            self.listBuyVolume[counter] = buyVolumeAtPrice\r\n            if(whilePrice == self.tokens[_symbolIndex].buyBook[whilePrice].highPrice):\r\n                break\r\n            else:\r\n                whilePrice = self.tokens[_symbolIndex].buyBook[whilePrice].highPrice\r\n            counter += 1\r\n    return self.listBuyPrices\r\n\r\n\r\n\r\n# Bid Limit Order\r\n@private\r\ndef addBuyOffer(symbol_index: int128, priceWei: wei_value, amount: uint256, user: address):\r\n    self.tokens[symbol_index].buyBook[priceWei].offers_len += 1 # Offers incr. by 1\r\n    self.tokens[symbol_index].buyBook[priceWei].offers[self.tokens[symbol_index].buyBook[priceWei].offers_len] = Offer({amount_tokens: amount, user: user})\r\n\r\n    if(self.tokens[symbol_index].buyBook[priceWei].offers_len == 1): \r\n        self.tokens[symbol_index].buyBook[priceWei].offers_key = 1\r\n        self.tokens[symbol_index].amount_buy_prices += 1 # New buy order received\r\n        current_buy_price: wei_value = self.tokens[symbol_index].current_buy_price\r\n        lowest_buy_price: wei_value = self.tokens[symbol_index].lowest_buy_price\r\n        # Buy offer is either First order or Lowest entry\r\n        if(lowest_buy_price == 0 or lowest_buy_price > priceWei):     \r\n            if(current_buy_price == 0): # First entry, No orders exist\r\n                self.tokens[symbol_index].current_buy_price = priceWei # Set current price to price offer\r\n                self.tokens[symbol_index].buyBook[priceWei].highPrice = priceWei # Set higher price to first order\r\n                self.tokens[symbol_index].buyBook[priceWei].lowPrice = 0 # Set lower price to 0\r\n            else: # New buy offer is lowest entry lowPrice > priceWei\r\n                self.tokens[symbol_index].buyBook[lowest_buy_price].lowPrice = priceWei # Set Buy book lowest price to New order price\r\n                self.tokens[symbol_index].buyBook[priceWei].highPrice = lowest_buy_price\r\n                self.tokens[symbol_index].buyBook[priceWei].lowPrice = 0\r\n            self.tokens[symbol_index].lowest_buy_price = priceWei\r\n        elif(current_buy_price < priceWei): # New buy offer is highest buy price\r\n            self.tokens[symbol_index].buyBook[current_buy_price].highPrice = priceWei\r\n            self.tokens[symbol_index].buyBook[priceWei].highPrice = priceWei\r\n            self.tokens[symbol_index].buyBook[priceWei].lowPrice = current_buy_price\r\n            self.tokens[symbol_index].current_buy_price = priceWei\r\n        else: # New Buy offer is between existing lowest and highest buy prices\r\n            buyPrice: wei_value = self.tokens[symbol_index].current_buy_price\r\n            foundInsert: bool = False\r\n            for i in range(MAX_ORDERS):\r\n                if(buyPrice < priceWei and self.tokens[symbol_index].buyBook[buyPrice].highPrice > priceWei):\r\n                    self.tokens[symbol_index].buyBook[priceWei].lowPrice = buyPrice\r\n                    self.tokens[symbol_index].buyBook[priceWei].highPrice = self.tokens[symbol_index].buyBook[buyPrice].highPrice\r\n                    self.tokens[symbol_index].buyBook[self.tokens[symbol_index].buyBook[buyPrice].highPrice].lowPrice = priceWei # Set order books higher price entry low price to the new offer\r\n                    self.tokens[symbol_index].buyBook[buyPrice].highPrice = priceWei # Set order book lower price entry higher price to the new order price\r\n                    foundInsert = True # Higher buy price > offer price and Offer price > entry price\r\n                buyPrice = self.tokens[symbol_index].buyBook[buyPrice].lowPrice\r\n                if(foundInsert):\r\n                    break\r\n\r\n\r\n@private\r\ndef createBuyLimitOrderUnmatched(sender: address, symbol_name: string[64], symbol_index: int128, priceWei: wei_value, amount_tokens_required: uint256, total_eth_required: wei_value):\r\n    \"\"\"\r\n    @notice - If a buy order is unmatched it will call this function\r\n    \"\"\"\r\n    total_eth_available: wei_value = total_eth_required # Ether balance required to purchase token\r\n    self.ethBalances[sender] -= total_eth_available # Use exchange balance for new order\r\n    self.addBuyOffer(symbol_index, priceWei, amount_tokens_required, sender)\r\n    log.NewLimitBuyOrder(symbol_index, sender, amount_tokens_required, priceWei, self.tokens[symbol_index].buyBook[priceWei].offers_len)\r\n\r\n\r\n@public\r\ndef buyToken(symbol_name: string[64], priceWei: wei_value, amount: uint256):\r\n    \"\"\"\r\n    @notice - Submit a New Bid Order\r\n    \"\"\"\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n    total_eth_required: wei_value = as_wei_value(0, 'ether')\r\n    amount_tokens_required: uint256 = amount\r\n\r\n    if(self.tokens[_symbolIndex].amount_sell_prices == 0 or self.tokens[_symbolIndex].amount_sell_prices > priceWei):\r\n        #log.Error('Create Buy limit order for unmatched 1')\r\n        self.createBuyLimitOrderUnmatched(msg.sender, symbol_name, _symbolIndex, priceWei, amount_tokens_required, total_eth_required)\r\n    else:\r\n        # Execute market order\r\n        # If: Sell Order Limit on book is less than or equal to buy priceWei offered\r\n        total_eth_available: wei_value = as_wei_value(0, 'ether')\r\n        whilePrice: wei_value = self.tokens[_symbolIndex].current_sell_price\r\n        offers_key: uint256 = 0\r\n        \r\n        for i in range(MAX_ORDERS):\r\n            if(whilePrice > priceWei or amount_tokens_required == 0):\r\n                break\r\n            offers_key = self.tokens[_symbolIndex].sellBook[whilePrice].offers_key\r\n            for x in range(MAX_ORDERS):\r\n                if(offers_key > self.tokens[_symbolIndex].sellBook[whilePrice].offers_len or amount_tokens_required == 0):\r\n                    break\r\n                volume_price_address: uint256 = self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].amount_tokens\r\n                if(volume_price_address <= amount_tokens_required):\r\n                    total_eth_available = volume_price_address * whilePrice / self.decimals\r\n                    assert self.ethBalances[msg.sender] >= total_eth_available\r\n                    self.ethBalances[msg.sender] -= total_eth_available\r\n                    self.tokenBalances[msg.sender][_symbolIndex] += volume_price_address\r\n                    self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].amount_tokens = 0\r\n                    self.ethBalances[self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].user] += total_eth_available\r\n                    self.tokens[_symbolIndex].sellBook[whilePrice].offers_key += 1\r\n                    log.FulfilledBuyOrder(_symbolIndex, volume_price_address, whilePrice, offers_key)\r\n                    amount_tokens_required -= volume_price_address\r\n                else:\r\n                    assert self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].amount_tokens > amount_tokens_required\r\n                    total_eth_required = amount_tokens_required * whilePrice / self.decimals\r\n                    self.ethBalances[msg.sender] -= total_eth_required\r\n                    self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].amount_tokens -= amount_tokens_required\r\n                    self.ethBalances[self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].user] += total_eth_required\r\n                    self.tokenBalances[msg.sender][_symbolIndex] += amount_tokens_required\r\n                    amount_tokens_required = 0\r\n                    log.FulfilledBuyOrder(_symbolIndex, amount_tokens_required, whilePrice, offers_key)\r\n                if( offers_key == self.tokens[_symbolIndex].sellBook[whilePrice].offers_len and \r\n                    self.tokens[_symbolIndex].sellBook[whilePrice].offers[offers_key].amount_tokens == 0):\r\n                    self.tokens[_symbolIndex].amount_sell_prices -= 1\r\n                    if( whilePrice == self.tokens[_symbolIndex].sellBook[whilePrice].highPrice or\r\n                        self.tokens[_symbolIndex].sellBook[whilePrice].highPrice == 0):\r\n                        self.tokens[_symbolIndex].current_sell_price = 0\r\n                    else:\r\n                        self.tokens[_symbolIndex].current_sell_price = self.tokens[_symbolIndex].sellBook[whilePrice].highPrice\r\n                        self.tokens[_symbolIndex].sellBook[self.tokens[_symbolIndex].sellBook[whilePrice].highPrice].lowPrice = 0\r\n                offers_key += 1\r\n            whilePrice = self.tokens[_symbolIndex].current_sell_price\r\n        if(amount_tokens_required > 0):\r\n            # create Buy limit order for tokens unable to match with a sell order for a buyer\r\n            #log.Error('Create Buy limit order for unmatched 2')\r\n            self.createBuyLimitOrderUnmatched(msg.sender, symbol_name, _symbolIndex, priceWei, amount_tokens_required, total_eth_required)\r\n    \r\n\r\n\r\n# New Order - ASK Order\r\n@private\r\ndef addSellOffer(symbol_index: int128, priceWei: wei_value, amount: uint256, user: address):\r\n    self.tokens[symbol_index].sellBook[priceWei].offers_len += 1 # Offers incr. by 1\r\n    self.tokens[symbol_index].sellBook[priceWei].offers[self.tokens[symbol_index].sellBook[priceWei].offers_len] = Offer({amount_tokens: amount, user: user})\r\n\r\n    if(self.tokens[symbol_index].sellBook[priceWei].offers_len == 1): \r\n        self.tokens[symbol_index].sellBook[priceWei].offers_key = 1\r\n        self.tokens[symbol_index].amount_sell_prices += 1 # New sell order received\r\n        current_sell_price: wei_value = self.tokens[symbol_index].current_sell_price\r\n        highest_sell_price: wei_value = self.tokens[symbol_index].highest_sell_price\r\n        # sell offer is either First order or highest entry\r\n        if(highest_sell_price == as_wei_value(0, 'ether') or highest_sell_price < priceWei):     \r\n            if(current_sell_price == as_wei_value(0, 'ether')): # First entry, No orders exist\r\n                self.tokens[symbol_index].current_sell_price = priceWei # Set current price to price offer\r\n                self.tokens[symbol_index].sellBook[priceWei].highPrice = as_wei_value(0, 'ether') # Set higher price to first order\r\n                self.tokens[symbol_index].sellBook[priceWei].lowPrice = as_wei_value(0, 'ether') # Set lower price to 0\r\n            else: # New sell offer is highest entry lowPrice > priceWei\r\n                self.tokens[symbol_index].sellBook[highest_sell_price].highPrice = priceWei # Set sell book highest price to New order price\r\n                self.tokens[symbol_index].sellBook[priceWei].lowPrice = highest_sell_price\r\n                self.tokens[symbol_index].sellBook[priceWei].highPrice = as_wei_value(0, 'ether')\r\n            self.tokens[symbol_index].highest_sell_price = priceWei\r\n        elif(current_sell_price > priceWei): # New sell offer is highest sell price\r\n            self.tokens[symbol_index].sellBook[current_sell_price].lowPrice = priceWei\r\n            self.tokens[symbol_index].sellBook[priceWei].highPrice = current_sell_price\r\n            self.tokens[symbol_index].sellBook[priceWei].lowPrice = as_wei_value(0, 'ether')\r\n            self.tokens[symbol_index].current_sell_price = priceWei\r\n        else: # New sell offer is between existing highest and highest sell prices\r\n            sellPrice: wei_value = self.tokens[symbol_index].current_sell_price\r\n            foundInsert: bool = False\r\n            for i in range(MAX_ORDERS):\r\n                if(sellPrice < priceWei and self.tokens[symbol_index].sellBook[sellPrice].highPrice > priceWei):\r\n                    self.tokens[symbol_index].sellBook[priceWei].lowPrice = sellPrice\r\n                    self.tokens[symbol_index].sellBook[priceWei].highPrice = self.tokens[symbol_index].sellBook[sellPrice].highPrice\r\n                    self.tokens[symbol_index].sellBook[self.tokens[symbol_index].sellBook[sellPrice].highPrice].lowPrice = priceWei # Set order books higher price entry low price to the new offer\r\n                    self.tokens[symbol_index].sellBook[sellPrice].highPrice = priceWei # Set order book lower price entry higher price to the new order price\r\n                    foundInsert = True # Higher sell price > offer price and Offer price > entry price\r\n                sellPrice = self.tokens[symbol_index].sellBook[sellPrice].highPrice\r\n                if(foundInsert):\r\n                    break\r\n\r\n\r\n@private\r\ndef createSellLimitOrderUnmatched(sender: address, symbol_name: string[64], symbol_index: int128, priceWei: wei_value, amount_tokens_required: uint256, total_eth_required: wei_value):\r\n    \"\"\"\r\n    @notice - If a sell order is unmatched it will call this function\r\n    \"\"\"\r\n    total_eth_available: wei_value = total_eth_required # Ether balance required to purchase token\r\n    self.tokenBalances[sender][symbol_index] -= amount_tokens_required # Use exchange balance for new order\r\n    self.addSellOffer(symbol_index, priceWei, amount_tokens_required, sender)\r\n    log.NewLimitSellOrder(symbol_index, sender, amount_tokens_required, priceWei, self.tokens[symbol_index].sellBook[priceWei].offers_len)\r\n\r\n# Order Book - ASK Orders\r\n@public\r\ndef sellToken(symbol_name: string[64], priceWei: wei_value, amount: uint256):\r\n    \"\"\"\r\n    @notice - Submit a New Bid Order\r\n    \"\"\"\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n    total_eth_required: wei_value = as_wei_value(0, 'ether')\r\n    amount_tokens_required: uint256 = amount\r\n\r\n    if(self.tokens[_symbolIndex].amount_buy_prices == 0 or self.tokens[_symbolIndex].current_buy_price < priceWei):\r\n        self.createSellLimitOrderUnmatched(msg.sender, symbol_name, _symbolIndex, priceWei, amount_tokens_required, total_eth_required)\r\n    else:\r\n        # Execute market sell order\r\n        # If: Buy Order Limit on book is greater than or equal to Sell priceWei offered by msg.sender\r\n        total_eth_available: wei_value = as_wei_value(0, 'ether')\r\n        whilePrice: wei_value = self.tokens[_symbolIndex].current_buy_price\r\n        offers_key: uint256 = 0\r\n        \r\n        for i in range(MAX_ORDERS):\r\n            if(whilePrice < priceWei or amount_tokens_required == 0):\r\n                break\r\n            offers_key = self.tokens[_symbolIndex].buyBook[whilePrice].offers_key\r\n            for x in range(MAX_ORDERS):\r\n                if(offers_key >= self.tokens[_symbolIndex].buyBook[whilePrice].offers_len or amount_tokens_required == 0):\r\n                    break\r\n                volume_price_address: uint256 = self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].amount_tokens\r\n                if(volume_price_address <= amount_tokens_required):\r\n                    total_eth_available = volume_price_address * whilePrice / self.decimals\r\n                    assert self.tokenBalances[msg.sender][_symbolIndex] >= volume_price_address\r\n                    self.tokenBalances[msg.sender][_symbolIndex] -= volume_price_address\r\n                    self.tokenBalances[self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].user][_symbolIndex] += volume_price_address\r\n                    self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].amount_tokens = 0\r\n                    self.ethBalances[msg.sender] += total_eth_available\r\n                    self.tokens[_symbolIndex].buyBook[whilePrice].offers_key += 1\r\n                    log.FulfilledSellOrder(_symbolIndex, volume_price_address, whilePrice, offers_key)\r\n                    amount_tokens_required -= volume_price_address\r\n                else:\r\n                    assert volume_price_address > amount_tokens_required\r\n                    total_eth_required = amount_tokens_required * whilePrice / self.decimals\r\n                    self.tokenBalances[msg.sender][_symbolIndex] -= amount_tokens_required\r\n                    self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].amount_tokens -= amount_tokens_required\r\n                    self.ethBalances[msg.sender] += total_eth_required\r\n                    self.tokenBalances[self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].user][_symbolIndex] += amount_tokens_required\r\n                    log.FulfilledSellOrder(_symbolIndex, amount_tokens_required, whilePrice, offers_key)\r\n                    amount_tokens_required = 0\r\n                if( offers_key == self.tokens[_symbolIndex].buyBook[whilePrice].offers_len and \r\n                    self.tokens[_symbolIndex].buyBook[whilePrice].offers[offers_key].amount_tokens == 0):\r\n                    self.tokens[_symbolIndex].amount_buy_prices -= 1\r\n                    if( whilePrice == self.tokens[_symbolIndex].buyBook[whilePrice].lowPrice or\r\n                        self.tokens[_symbolIndex].buyBook[whilePrice].lowPrice == as_wei_value(0, 'ether')):\r\n                        self.tokens[_symbolIndex].current_buy_price = as_wei_value(0, 'ether')\r\n                    else:\r\n                        self.tokens[_symbolIndex].current_buy_price = self.tokens[_symbolIndex].buyBook[whilePrice].lowPrice\r\n                        self.tokens[_symbolIndex].buyBook[self.tokens[_symbolIndex].buyBook[whilePrice].lowPrice].highPrice = self.tokens[_symbolIndex].current_buy_price\r\n                offers_key += 1\r\n            whilePrice = self.tokens[_symbolIndex].current_buy_price\r\n        if(amount_tokens_required > 0):\r\n            # create Sell limit order for tokens unable to match with a sell order for a Seller\r\n            self.createSellLimitOrderUnmatched(msg.sender, symbol_name, _symbolIndex, priceWei, amount_tokens_required, total_eth_required)\r\n\r\n\r\n@public\r\ndef cancelOrder(symbol_name: string[64], isSellOrder: bool, priceWei: wei_value, offer_key: uint256):\r\n    \"\"\"\r\n    @notice - Cancels a Limit Order\r\n    \"\"\"\r\n    _symbolIndex: int128 = self.getSymbolIndex(symbol_name) # Gets symbol index in memory\r\n\r\n    if(isSellOrder):\r\n        assert self.tokens[_symbolIndex].sellBook[priceWei].offers[offer_key].user == msg.sender\r\n        token_amount: uint256 = self.tokens[_symbolIndex].sellBook[priceWei].offers[offer_key].amount_tokens\r\n        self.tokenBalances[msg.sender][_symbolIndex] += token_amount\r\n        self.tokens[_symbolIndex].sellBook[priceWei].offers[offer_key].amount_tokens = 0\r\n        log.CanceledSellOrder(_symbolIndex, priceWei, offer_key)\r\n    else:\r\n        assert self.tokens[_symbolIndex].sellBook[priceWei].offers[offer_key].user == msg.sender\r\n        etherRefund: wei_value = self.tokens[_symbolIndex].buyBook[priceWei].offers[offer_key].amount_tokens * priceWei\r\n        self.ethBalances[msg.sender] += etherRefund\r\n        self.tokens[_symbolIndex].buyBook[priceWei].offers[offer_key].amount_tokens = 0\r\n        log.CanceledBuyOrder(_symbolIndex, priceWei, offer_key)\r\n",
  "sourcePath": "C:/Users/alexa/OneDrive/Documents/Master/Blockchain/Projects/Emerald_Project/contracts/ODEX.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b14+commit.49b201c"
  },
  "networks": {
    "5777": {
      "events": {
        "0x32dc7784c530b21120f04aa0b66b7710c5b628f0526c58ffae71d67c2d5da11d": {
          "name": "AddToken",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "string",
              "name": "_token",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_timestamp",
              "indexed": false,
              "unit": "sec"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x32dc7784c530b21120f04aa0b66b7710c5b628f0526c58ffae71d67c2d5da11d"
        },
        "0x3f6f4156ea86675308acc9eee72173d12b5d1a1aae53ba069f6182f81e8a45ac": {
          "name": "TokenDeposit",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_timestamp",
              "indexed": false,
              "unit": "sec"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x3f6f4156ea86675308acc9eee72173d12b5d1a1aae53ba069f6182f81e8a45ac"
        },
        "0x9c557f9de3b8d172d17101c47b74defac8abdb902220095163e96c45a192abdf": {
          "name": "TokenWithdraw",
          "inputs": [
            {
              "type": "address",
              "name": "_to",
              "indexed": true
            },
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_timestamp",
              "indexed": false,
              "unit": "sec"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x9c557f9de3b8d172d17101c47b74defac8abdb902220095163e96c45a192abdf"
        },
        "0xfae570aafc29f1091fc10459d8172aecaed5f12a411cfc1869bbd72357865c1e": {
          "name": "EthDeposit",
          "inputs": [
            {
              "type": "address",
              "name": "_from",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amountWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_timestamp",
              "indexed": false,
              "unit": "sec"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xfae570aafc29f1091fc10459d8172aecaed5f12a411cfc1869bbd72357865c1e"
        },
        "0xf0b4c3c0bbcf3162f0aba94599d7c7f306972ad91759d1824adf34882d551175": {
          "name": "EthWithdraw",
          "inputs": [
            {
              "type": "address",
              "name": "_to",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amountWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_timestamp",
              "indexed": false,
              "unit": "sec"
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xf0b4c3c0bbcf3162f0aba94599d7c7f306972ad91759d1824adf34882d551175"
        },
        "0xeb182739819e1aad997521110d9ac93d34b92530a2194372f3c72728cc9db492": {
          "name": "NewLimitBuyOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "address",
              "name": "_who",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xeb182739819e1aad997521110d9ac93d34b92530a2194372f3c72728cc9db492"
        },
        "0xc255d0519a8b9d5b71d1f7a19adfe4d20a3572367149e3403f9dd25bb3ee51a1": {
          "name": "NewLimitSellOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "address",
              "name": "_who",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0xc255d0519a8b9d5b71d1f7a19adfe4d20a3572367149e3403f9dd25bb3ee51a1"
        },
        "0x81ec17c1f7f8fa70de3ea8434f4366235c65e78f89dcc6dd019d2395199f151c": {
          "name": "FulfilledBuyOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x81ec17c1f7f8fa70de3ea8434f4366235c65e78f89dcc6dd019d2395199f151c"
        },
        "0x593f3dfb48b44193d3934afaf8488765c812553b844ec0e7f595b28ea162d8e9": {
          "name": "FulfilledSellOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_amount_tokens",
              "indexed": false
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x593f3dfb48b44193d3934afaf8488765c812553b844ec0e7f595b28ea162d8e9"
        },
        "0x827d29feae27a23402c8c3a43ff6acb6540baf1148067917399e4e6667c8e224": {
          "name": "CanceledBuyOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x827d29feae27a23402c8c3a43ff6acb6540baf1148067917399e4e6667c8e224"
        },
        "0x787aae6fd249d02d1649323c99f3150e35200f1bd28c2935cd371efe50280f1e": {
          "name": "CanceledSellOrder",
          "inputs": [
            {
              "type": "int128",
              "name": "_symbolIndex",
              "indexed": true
            },
            {
              "type": "uint256",
              "name": "_priceWei",
              "indexed": false,
              "unit": "wei"
            },
            {
              "type": "uint256",
              "name": "_orderKey",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x787aae6fd249d02d1649323c99f3150e35200f1bd28c2935cd371efe50280f1e"
        },
        "0x08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa": {
          "name": "Error",
          "inputs": [
            {
              "type": "string",
              "name": "err",
              "indexed": false
            }
          ],
          "anonymous": false,
          "type": "event",
          "signature": "0x08c379a0afcc32b1a39302f7cb8073359698411ab5fd6e3edb2c02c0b5fba8aa"
        }
      },
      "links": {},
      "address": "0x46fB6FbC25Bd4017A526F929d5e97210d840D884",
      "transactionHash": "0x31bf4010b5e5516a08659593a24a05faefe7ff341d98747643e35f0b3946bc11"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-11-26T18:31:24.219Z",
  "networkType": "ethereum"
}