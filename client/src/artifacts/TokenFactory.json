{
  "contractName": "TokenFactory",
  "abi": [
    {
      "outputs": [],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "constructor"
    },
    {
      "name": "pairTest",
      "outputs": [
        {
          "type": "bool",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 4379
    },
    {
      "name": "createToken",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "_controller"
        },
        {
          "type": "string",
          "name": "_name"
        },
        {
          "type": "string",
          "name": "_symbol"
        },
        {
          "type": "uint256",
          "name": "_decimals"
        },
        {
          "type": "uint256",
          "name": "_supply"
        },
        {
          "type": "address",
          "name": "_template"
        },
        {
          "type": "uint256",
          "unit": "sec",
          "name": "_expiration"
        },
        {
          "type": "bytes32",
          "name": "_tokenId"
        }
      ],
      "constant": false,
      "payable": false,
      "type": "function",
      "gas": 83064
    },
    {
      "name": "name",
      "outputs": [
        {
          "type": "string",
          "name": "out"
        }
      ],
      "inputs": [],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 5213
    },
    {
      "name": "user_to_genesisToken",
      "outputs": [
        {
          "type": "address",
          "name": "out"
        }
      ],
      "inputs": [
        {
          "type": "address",
          "name": "arg0"
        }
      ],
      "constant": true,
      "payable": false,
      "type": "function",
      "gas": 795
    }
  ],
  "bytecode": "0x740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052341561009857600080fd5b6007610140527f466163746f7279000000000000000000000000000000000000000000000000006101605261014080600060c052602060c020602082510161012060006002818352015b826101205160200211156100f557610117565b61012051602002850151610120518501555b81516001018083528114156100e2575b50505050505061069056600436101561000d57610568565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052636eb1b51760005114156102495734156100ba57600080fd5b6101408060016103e0527f3100000000000000000000000000000000000000000000000000000000000000610400526103e080516020018083828460006004600a8704601201f161010a57600080fd5b50506001610440527f31000000000000000000000000000000000000000000000000000000000000006104605261044080516020018083608001828460006004600a8704601201f161015b57600080fd5b5050670de0b6b3a76400008161010001523081610120015250806101400160016104a0527f31000000000000000000000000000000000000000000000000000000000000006104c0526104a080516020018083828460006004600a8704601201f16101c557600080fd5b50506001610500527f31000000000000000000000000000000000000000000000000000000000000006105205261050080516020018083608001828460006004600a8704601201f161021657600080fd5b5050670de0b6b3a764000081610100015230816101200152506402540be40081610280015250600160005260206000f350005b63ffd9d826600051141561046c57341561026257600080fd5b600435602051811061027357600080fd5b50606060243560040161014037604060243560040135111561029457600080fd5b60606044356004016101c03760406044356004013511156102b457600080fd5b60a43560205181106102c557600080fd5b50600033186102d357600080fd5b600060a435186102e257600080fd5b7f6033600c60003960336000f33660006000376110006000366000730000000000610260526c0100000000000000000000000060a4350261027b527f5af4602c57600080fd5b6110006000f30000000000000000000000000000000061028f5260606102606000f08061035457600080fd5b61024052610240513b61036657600080fd5b61024051301861037557600080fd5b600060006101a460e063626c0b9861030052600435610320528061034052610140808051602001808461032001828460006004600a8704601201f16103b957600080fd5b50508051820160206001820306601f820103905060200191505080610360526101c0808051602001808461032001828460006004600a8704601201f16103fe57600080fd5b50508051820160206001820306601f8201039050602001915050606435610380526084356103a05260c4356103c05260e4356103e05261031c90506000610240515af161044a57600080fd5b6102405160013360e05260c052604060c020556102405160005260206000f350005b6306fdde03600051141561052057341561048557600080fd5b60008060c052602060c020610180602082540161012060006003818352015b826101205160200211156104b7576104d9565b61012051850154610120516020028501525b81516001018083528114156104a4575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6363022b15600051141561056757341561053957600080fd5b600435602051811061054a57600080fd5b50600160043560e05260c052604060c0205460005260206000f350005b5b60006000fd5b61012261069003610122600039610122610690036000f3",
  "deployedBytecode": "0x600436101561000d57610568565b600035601c52740100000000000000000000000000000000000000006020526f7fffffffffffffffffffffffffffffff6040527fffffffffffffffffffffffffffffffff8000000000000000000000000000000060605274012a05f1fffffffffffffffffffffffffdabf41c006080527ffffffffffffffffffffffffed5fa0e000000000000000000000000000000000060a052636eb1b51760005114156102495734156100ba57600080fd5b6101408060016103e0527f3100000000000000000000000000000000000000000000000000000000000000610400526103e080516020018083828460006004600a8704601201f161010a57600080fd5b50506001610440527f31000000000000000000000000000000000000000000000000000000000000006104605261044080516020018083608001828460006004600a8704601201f161015b57600080fd5b5050670de0b6b3a76400008161010001523081610120015250806101400160016104a0527f31000000000000000000000000000000000000000000000000000000000000006104c0526104a080516020018083828460006004600a8704601201f16101c557600080fd5b50506001610500527f31000000000000000000000000000000000000000000000000000000000000006105205261050080516020018083608001828460006004600a8704601201f161021657600080fd5b5050670de0b6b3a764000081610100015230816101200152506402540be40081610280015250600160005260206000f350005b63ffd9d826600051141561046c57341561026257600080fd5b600435602051811061027357600080fd5b50606060243560040161014037604060243560040135111561029457600080fd5b60606044356004016101c03760406044356004013511156102b457600080fd5b60a43560205181106102c557600080fd5b50600033186102d357600080fd5b600060a435186102e257600080fd5b7f6033600c60003960336000f33660006000376110006000366000730000000000610260526c0100000000000000000000000060a4350261027b527f5af4602c57600080fd5b6110006000f30000000000000000000000000000000061028f5260606102606000f08061035457600080fd5b61024052610240513b61036657600080fd5b61024051301861037557600080fd5b600060006101a460e063626c0b9861030052600435610320528061034052610140808051602001808461032001828460006004600a8704601201f16103b957600080fd5b50508051820160206001820306601f820103905060200191505080610360526101c0808051602001808461032001828460006004600a8704601201f16103fe57600080fd5b50508051820160206001820306601f8201039050602001915050606435610380526084356103a05260c4356103c05260e4356103e05261031c90506000610240515af161044a57600080fd5b6102405160013360e05260c052604060c020556102405160005260206000f350005b6306fdde03600051141561052057341561048557600080fd5b60008060c052602060c020610180602082540161012060006003818352015b826101205160200211156104b7576104d9565b61012051850154610120516020028501525b81516001018083528114156104a4575b50505050505061018051806101a001818260206001820306601f82010390500336823750506020610160526040610180510160206001820306601f8201039050610160f350005b6363022b15600051141561056757341561053957600080fd5b600435602051811061054a57600080fd5b50600160043560e05260c052604060c0205460005260206000f350005b5b60006000fd",
  "source": "# @title Factory\r\n# \r\n# @notice Controls creation of\r\n# \r\n# @author Alexander Angel\r\n# \r\n# @dev Instrument Controller manages this contract\r\n#\r\n# @version 0.1.0b14\r\n\r\n\r\nstruct Asset: # ERC-20 Token\r\n    name: string[64]\r\n    symbol: string[64]\r\n    decimals: uint256\r\n    assetAddress: address\r\n\r\nstruct AssetPair: # Entangles two Assets\r\n    strike_asset: Asset\r\n    underlying_asset: Asset\r\n    ratio: uint256 # Amount of strike tokens relative to 1 underlying token\r\n\r\n\r\ncontract GenesisToken():\r\n    def setup(\r\n        _controller: address,\r\n        _name: string[64],\r\n        _symbol: string[64],\r\n        _decimals: uint256,\r\n        _supply: uint256,\r\n        _expiration: timestamp,\r\n        _tokenId: bytes32,\r\n    ):modifying\r\n\r\n\r\nname: public(string[64])\r\nuser_to_genesisToken: public(map(address, address))\r\n\r\n\r\n\r\n@public\r\ndef __init__():\r\n    self.name = 'Factory'\r\n\r\n@public\r\ndef pairTest() -> bool:\r\n    pair: AssetPair = AssetPair({\r\n        strike_asset: Asset({\r\n            name:'1', \r\n            symbol: '1', \r\n            decimals: 10**18,\r\n            assetAddress: self,\r\n        }),\r\n        underlying_asset: Asset({\r\n            name:'1', \r\n            symbol: '1', \r\n            decimals: 10**18,\r\n            assetAddress: self,\r\n        }),\r\n        ratio: 10**10,\r\n    })\r\n    return True\r\n\r\n@public\r\ndef createToken(\r\n        _controller: address,\r\n        _name: string[64],\r\n        _symbol: string[64],\r\n        _decimals: uint256,\r\n        _supply: uint256,\r\n        _template: address,\r\n        _expiration: timestamp,\r\n        _tokenId: bytes32,\r\n    ) -> address:\r\n    assert msg.sender != ZERO_ADDRESS\r\n    assert _template != ZERO_ADDRESS\r\n\r\n    genesisToken: address = create_forwarder_to(_template)\r\n    GenesisToken(genesisToken).setup(\r\n        _controller, \r\n        _name,\r\n        _symbol,\r\n        _decimals,\r\n        _supply,\r\n        _expiration,\r\n        _tokenId\r\n    )\r\n    self.user_to_genesisToken[msg.sender] = genesisToken\r\n    return genesisToken",
  "sourcePath": "C:/Users/alexa/OneDrive/Documents/Master/Blockchain/Projects/Emerald_Project/contracts/factories/TokenFactory.vy",
  "compiler": {
    "name": "vyper",
    "version": "0.1.0b14+commit.49b201c"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x4789413b9e69025e693d7F38c2061CEEa5F5A527",
      "transactionHash": "0x4db328ee9288196d57f91fa887fed7ec7641fcbbfc407780c063b3ccdd87761e"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-03T00:01:55.302Z",
  "networkType": "ethereum"
}